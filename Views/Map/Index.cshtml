@*<link rel="stylesheet" href="/scripts/gis/bootstrap/css/bootstrap.min.css" />
<link rel="stylesheet" href="/scripts/gis/bootstrap/css/bootstrap-theme.min.css" />*@
<link rel="stylesheet" href="/scripts/gis/bootstrapExt/dialog/css/bootstrap-dialog.min.css" />
<link rel="stylesheet" href="/scripts/gis/openlayers/css/ol.css" />
<link rel="stylesheet" href="/scripts/gis/adminlte/css/font-awesome.min.css">
<link rel="stylesheet" href="/scripts/gis/adminlte/css/ionicons.min.css">
<link rel="stylesheet" href="/scripts/gis/adminlte/css/AdminLTE.css">
<link rel="stylesheet" href="/scripts/gis/adminlte/css/skins/_all-skins.min.css">
<style>
    .search-bar 
        {
            position:absolute;
        top: 10px;
        left: 100px;
      }
       .ur-zoom 
        {
        bottom: 105px;
        right: .5em;
      }
       .ur-full-screen 
        {
        bottom: 30px;
        right: .5em;
      }
      .ur-zoom-extent
      {
             bottom: 70px;
             right: .5em;
          }
      
     
      
    .layer-switcher {
        position: absolute;
        top: 10px;
        right: 0.5em;
        text-align: left;
        background-color: rgba(255,255,255,.7);
        padding-left:10px;        
        padding-right:10px;
        padding-top:5px;
        padding-bottom:5px;
        border:1px solid silver;
        font-family:微软雅黑;
    }
    .map
    {
        background:rgba(93,93,93,0.5);
        }
        .ol-popup {
        position: absolute;
        background-color: white;
        -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        padding: 15px;
        border-radius: 10px;
        border: 1px solid #cccccc;
        bottom: 60px;
        left: -50px;
        min-width: 280px;
      }
      .ol-popup:after, .ol-popup:before {
        top: 100%;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
      }
      .ol-popup:after {
        border-top-color: white;
        border-width: 10px;
        left: 48px;
        margin-left: -10px;
      }
      .ol-popup:before {
        border-top-color: #cccccc;
        border-width: 11px;
        left: 48px;
        margin-left: -11px;
      }
      .ol-popup-closer {
        text-decoration: none;
        position: absolute;
        top: 2px;
        right: 8px;
      }
      .ol-popup-closer:after {
        content: "✖";
      }
      .tooltip {
        position: relative;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 4px;
        color: white;
        padding: 4px 8px;
        opacity: 0.7;
        white-space: nowrap;
      }
      .tooltip-measure {
        opacity: 1;
        font-weight: bold;
      }
      .tooltip-static {
        background-color: #ffcc33;
        color: black;
        border: 1px solid white;
      }
      .tooltip-measure:before,
      .tooltip-static:before {
        border-top: 6px solid rgba(0, 0, 0, 0.5);
        border-right: 6px solid transparent;
        border-left: 6px solid transparent;
        content: "";
        position: absolute;
        bottom: -6px;
        margin-left: -7px;
        left: 50%;
      }
      .tooltip-static:before {
        border-top-color: #ffcc33;
      }  
      .ol-dragbox {
        background-color: rgba(255,255,255,0.4);
        border-color: rgba(100,150,0,1);
      }
    body {
        font-size:12px;
    }
    .row {
        margin-left:-15px;
        margin-right:0px;
    }
</style>

<div style="position:absolute; top:0px; left:0px; width:100%; height:100%">
    <div id="map" class="map" style="position:absolute; height:100%; width:100%"></div>
    <div style="position:absolute; top:10px; left:20px; width:900px;">
        <div class="row">
            <div class="col-xs-6">
                <div class="input-group" >
                    <input id="text-search" type="text" class="form-control" >
                    <div class="input-group-btn">
                        <select id="select-search-type" class="btn btn-default dropdown-toggle">
                            <option value="1">竣工工程</option>
                            <option value="12">执照档案</option>
                            <option value="13">道路档案</option>
                            <option value="2">地理</option>
                            <option value="3">道路</option>
                        </select>
                        <button id="btn-search" type="button" class="btn btn-default" tabindex="-1">
                            搜索
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-xs-5">
                <div class="btn-group" data-toggle="buttons">
                    <label id="option_yd" class="btn btn-default btn-sm active">
                        <input type="radio" name="tool_options"> <i class="fa fa-arrows"></i> 移动
                    </label>
                    <label id="option_dx" class="btn btn-default btn-sm">
                        <input type="radio" name="tool_options"> <i class="fa fa-hand-pointer-o"></i> 单选
                    </label>
                    <label id="option_kx" class="btn btn-default btn-sm">
                        <input type="radio" name="tool_options"> <i class="fa fa-object-group"></i> 框选
                    </label>
                    <label id="option_polyx" class="btn btn-default btn-sm">
                        <input type="radio" name="tool_options"> <i class="fa fa-object-group"></i> 多边形
                    </label>
                    <label id="option_jl" class="btn btn-default btn-sm">
                        <input type="radio" name="tool_options"> <i class="fa fa-arrows-h"></i> 距离
                    </label>
                    <label id="option_mj" class="btn btn-default btn-sm">
                        <input type="radio" name="tool_options"> <i class="fa fa-connectdevelop"></i> 面积
                    </label>
                </div>
            </div>
        </div>
    </div>
    <div style="position:absolute; top:50px; left:20px; width:410px;">
        <div id="searchResultCon">
            <div id="box-searchresult" class="box box-success" style="background: #ffffff;  border-top: 3px solid #d2d6de;">
                <div class="box-header">
                    <div class="box-tools pull-right">
                        <button id="btn-searchresult-remove" type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div id="box-body-searchresult" class="box-body" style="height:300px; overflow:auto;">
                </div>
                <div class="box-footer"></div>
            </div>
        </div>
    </div>
    <div id="popup" class="ol-popup">
        <a href="#" id="popup-closer" class="ol-popup-closer"></a>
        <div id="popup-content"></div>
        <div id="project-content" style="max-height:200px; overflow:auto"></div>
    </div>
    <div id="PLdatas" style="visibility:hidden;"></div>
</div>

@*<script src="/scripts/jquery/jquery-3.1.0.min.js" type="text/javascript"></script>
<script src="/scripts/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>*@
<script src="/scripts/gis/bootstrapExt/dialog/js/bootstrap-dialog.min.js" type="text/javascript"></script>
<script src="/scripts/gis/jquery/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayers/js/polyfill.min.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayers/js/ol.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayersExt/layerswitcher/ol3-layerswitcher2.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayers/js/proj4.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayers/js/2385.js" type="text/javascript"></script>
<script src="/scripts/gis/openlayers/js/2364.js" type="text/javascript"></script>
<script src="/scripts/gis/customs/home.js" type="text/javascript"></script> 
<script type="text/javascript">
    var gotoProjectMarker = function (id) {
        var marker = searchSource.getFeatureById(id);
        var cords = marker.getGeometry().getCoordinates();
        map.getView().animate({ zoom: 10, center: cords, duration: 500 });
        searchSource.forEachFeature(function (feature) {
            feature.setStyle(searchLayerFeatureStyle(feature));
        });
        marker.setStyle(searchLayerFeatureSelectedStyle(marker));
        unitOverlayContent.innerHTML = '<code>' + marker.get("name") + '</code>';
        unitOverlay.setPosition(cords);
    };
    var gotoNearProjectMarker = function (id) {
        var marker = searchSource.getFeatureById(id);
        var cords = marker.getGeometry().getCoordinates();
        map.getView().animate({ zoom: 10, center: cords, duration: 500 });
        searchSource.forEachFeature(function (feature) {
            feature.setStyle(searchLayerFeatureStyle(feature));
        });
        marker.setStyle(searchLayerFeatureSelectedStyle(marker));
    };
    var gotoUnitMarker = function (id) {
        var marker = searchSource.getFeatureById(id);
        var cords = marker.getGeometry().getCoordinates();
        map.getView().animate({ zoom: 10, center: cords, duration: 500 });
        searchSource.forEachFeature(function (feature) {
            //feature.setStyle(searchLayerFeatureStyle(feature));
            if (feature.get("type") == "nearproject") {
                searchSource.removeFeature(feature);
            }
        });
        marker.setStyle(searchLayerFeatureSelectedStyle(marker));
        unitOverlayProjectContent.html('');
        unitOverlayContent.innerHTML = '<code>' + marker.get("name") + '</code><a href="#" onClick="loadNearProjects(' + id + ')">周边工程</a>';
        unitOverlay.setPosition(cords);
    };
    var loadNearProjects = function (id) {
        var m = searchSource.getFeatureById(id);
        var cords = m.getGeometry().getCoordinates();
        var circle = new ol.geom.Circle(cords, 200);
        var cf = new ol.Feature({
            type: 'nearproject',
            geometry: circle
        });
        searchSource.addFeature(cf);
        var extent = circle.getExtent();
        var i = 0;
        //projectSource.forEachFeatureInExtent(extent, function (feature) {
        projectShpSource.forEachFeatureInExtent(extent, function (feature) { //20191013 新的shp图层
            i++;
            var f = feature;
            //var point = f.getGeometry().getInteriorPoint();
            var point = f.getGeometry();
            var marker = new ol.Feature({
                type: 'nearproject',
                id: i.toString(),
                geometry: point,
                labelPoint: point,
                name: f.get("name").toString()
            });
            marker.setId('np' + i.toString());
            marker.setStyle(searchLayerFeatureStyle(marker));
            searchSource.addFeature(marker);
            unitOverlayProjectContent.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + i.toString() + '</span></span><a style="color:black; margin-left:15px" href="#" onClick="gotoNearProjectMarker(\'' + marker.getId() + '\')">' + f.get("name").toString() + '</a></p>');

        });
    };

    /*.....................................测量......................................*/
    var wgs84Sphere = new ol.Sphere(6378137);
    @*/**
         * Currently drawn feature.
         * @type {ol.Feature}
         */*@
    var sketch;

    @*/**
         * The help tooltip element.
         * @type {Element}
         */*@
    var helpTooltipElement;

    @*/**
         * Overlay to show the help messages.
         * @type {ol.Overlay}
         */*@
    var helpTooltip;

    @*/**
         * The measure tooltip element.
         * @type {Element}
         */*@
    var measureTooltipElement;

    @*/**
         * Overlay to show the measurement.
         * @type {ol.Overlay}
         */*@
    var measureTooltip;

    @*/**
         * Message to show when the user is drawing a polygon.
         * @type {string}
         */*@
    var continuePolygonMsg = 'Click to continue drawing the polygon';

    @*/**
         * Message to show when the user is drawing a line.
         * @type {string}
         */*@
    var continueLineMsg = 'Click to continue drawing the line';

    @*/**
         * Handle pointer move.
         * @param {ol.MapBrowserEvent} evt The event.
         */*@
    var pointerMoveHandler = function (evt) {
        if (evt.dragging) {
            return;
        }
        @*/** @type {string} */*@
        var helpMsg = 'Click to start drawing';

        if (sketch) {
            var geom = (sketch.getGeometry());
            if (geom instanceof ol.geom.Polygon) {
                helpMsg = continuePolygonMsg;
            } else if (geom instanceof ol.geom.LineString) {
                helpMsg = continueLineMsg;
            }
        }
        helpTooltipElement.innerHTML = helpMsg;
        helpTooltip.setPosition(evt.coordinate);

        helpTooltipElement.classList.remove('hidden');
    };




    var typeSelect;
    var geodesicCheckbox = true;

    var draw; // global so we can remove it later


    @*/**
             * Format length output.
             * @param {ol.geom.LineString} line The line.
             * @return {string} The formatted length.
             */*@
    var formatLength = function (line) {
        var length;
        if (geodesicCheckbox) {
            var coordinates = line.getCoordinates();
            length = 0;
            var sourceProj = map.getView().getProjection();
            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {
                var c1 = ol.proj.transform(coordinates[i], sourceProj, 'EPSG:4326');
                var c2 = ol.proj.transform(coordinates[i + 1], sourceProj, 'EPSG:4326');
                length += wgs84Sphere.haversineDistance(c1, c2);
            }
        } else {
            length = Math.round(line.getLength() * 100) / 100;
        }
        var output;
        if (length > 100) {
            output = (Math.round(length / 1000 * 100) / 100) +
     ' ' + 'km';
        } else {
            output = (Math.round(length * 100) / 100) +
     ' ' + 'm';
        }
        return output;
    };


    @*/**
             * Format area output.
             * @param {ol.geom.Polygon} polygon The polygon.
             * @return {string} Formatted area.
             */*@
    var formatArea = function (polygon) {
        var area;
        if (geodesicCheckbox) {
            var sourceProj = map.getView().getProjection();
            var geom = @*/** @type {ol.geom.Polygon} */*@(polygon.clone().transform(
     sourceProj, 'EPSG:4326'));
            var coordinates = geom.getLinearRing(0).getCoordinates();
            area = Math.abs(wgs84Sphere.geodesicArea(coordinates));
        } else {
            area = polygon.getArea();
        }
        var output;
        if (area > 10000) {
            output = (Math.round(area / 1000000 * 100) / 100) +
     ' ' + 'km<sup>2</sup>';
        } else {
            output = (Math.round(area * 100) / 100) +
     ' ' + 'm<sup>2</sup>';
        }
        return output;
    };

    function addMeasureInteraction() {
        var type = typeSelect;
        draw = new ol.interaction.Draw({
            source: toolSource,
            type: @*/** @type {ol.geom.GeometryType} */*@(type),
            style: new ol.style.Style({
                fill: new ol.style.Fill({
                    color: 'rgba(255, 255, 255, 0.2)'
                }),
                stroke: new ol.style.Stroke({
                    color: 'rgba(0, 0, 0, 0.5)',
                    lineDash: [10, 10],
                    width: 2
                }),
                image: new ol.style.Circle({
                    radius: 5,
                    stroke: new ol.style.Stroke({
                        color: 'rgba(0, 0, 0, 0.7)'
                    }),
                    fill: new ol.style.Fill({
                        color: 'rgba(255, 255, 255, 0.2)'
                    })
                })
            })
        });
        map.addInteraction(draw);

        createMeasureTooltip();
        createHelpTooltip();

        var listener;
        draw.on('drawstart', function (evt) {
            // set sketch
            sketch = evt.feature;

            @*/** @type {ol.Coordinate|undefined} */*@
            var tooltipCoord = evt.coordinate;

            listener = sketch.getGeometry().on('change', function (evt) {
                var geom = evt.target;
                var output;
                if (geom instanceof ol.geom.Polygon) {
                    output = formatArea(geom);
                    tooltipCoord = geom.getInteriorPoint().getCoordinates();
                } else if (geom instanceof ol.geom.LineString) {
                    output = formatLength(geom);
                    tooltipCoord = geom.getLastCoordinate();
                }
                measureTooltipElement.innerHTML = output;
                measureTooltip.setPosition(tooltipCoord);
            });
        }, this);

        draw.on('drawend', function () {
            measureTooltipElement.className = 'tooltip tooltip-static';
            measureTooltip.setOffset([0, -7]);
            // unset sketch
            sketch = null;
            // unset tooltip so that a new one can be created
            measureTooltipElement = null;
            createMeasureTooltip();
            ol.Observable.unByKey(listener);
        }, this);

        map.on('pointermove', pointerMoveHandler);

        map.getViewport().addEventListener('mouseout', function () {
            helpTooltipElement.classList.add('hidden');
        });
    }


    /**
    * Creates a new help tooltip
    */
    function createHelpTooltip() {
        if (helpTooltipElement) {
            helpTooltipElement.parentNode.removeChild(helpTooltipElement);
        }
        helpTooltipElement = document.createElement('div');
        helpTooltipElement.className = 'tooltip hidden';
        helpTooltip = new ol.Overlay({
            element: helpTooltipElement,
            offset: [15, 0],
            positioning: 'center-left'
        });
        map.addOverlay(helpTooltip);
    }


    /**
    * Creates a new measure tooltip
    */
    function createMeasureTooltip() {
        if (measureTooltipElement) {
            measureTooltipElement.parentNode.removeChild(measureTooltipElement);
        }
        measureTooltipElement = document.createElement('div');
        measureTooltipElement.className = 'tooltip tooltip-measure';
        measureTooltip = new ol.Overlay({
            element: measureTooltipElement,
            offset: [0, -15],
            positioning: 'bottom-center'
        });
        map.addOverlay(measureTooltip);
    }


    /*.....................测量结束.........................................................*/


    /*.....................框选........................................................*/

    var dragBox = new ol.interaction.DragBox({
        // condition: ol.events.condition.platformModifierKeyOnly
    });
    var iconStyle=new ol.style.Style({

        image: new ol.style.Icon(({
            anchor: [0.5, 1],
            scale: 0.2,
            anchorXUnits: 'fraction',
            anchorYUnits: 'pixels',
            src: '/scripts/gis/openlayers/resources/test.png'

        }))
    });
    var selFeaturePPSN=[];
    dragBox.on('boxend', function () {
        var extent = dragBox.getGeometry().getExtent();
        var i = 0;
        /*20190920 fs新版框选*/
        var features = projectShpSource.getFeatures();
        for (i = 0; i < features.length; i++) {
            features[i].setStyle(null);//控制框选后显示或隐藏     
        };
        var str ='';
        projectShpSource.forEachFeatureIntersectingExtent(extent, function (feature) {
            i++;
            var f = feature;
            var point = f.getGeometry();
            f.setStyle(iconStyle);
            selFeaturePPSN.push(f.get('paperProjectSeqNo'));
            str += f.get('paperProjectSeqNo') + "%" + f.get('projectName') + " ";
        });
        if (str != '') {
           
            var inputPLdata = document.getElementById("PLdatas");
            inputPLdata.innerText = str;
            // 点选工程列表
            BootstrapDialog.show({
                type: BootstrapDialog.TYPE_INFO,
                size: BootstrapDialog.SIZE_NORMAL,
                draggable: true,
                title: '选择竣工工程数据',
                message: $('<div></div>').load('/Map/ProjectInfoPL'),
            })
        }

        /*旧版框选*/
        /*projectSource.forEachFeatureIntersectingExtent(extent, function (feature) {
            i++;
            var f = feature;
            var point = f.getGeometry().getInteriorPoint();
            var marker = new ol.Feature({
                type: 'nearproject',
                id: i.toString(),
                geometry: point,
                labelPoint: point,
                name: f.get("name").toString()
            });
            marker.setId('np' + i.toString());
            marker.setStyle(searchLayerFeatureStyle(marker));
            toolSource.addFeature(marker);
            // unitOverlayProjectContent.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + i.toString() + '</span></span><a style="color:black; margin-left:15px" href="#" onClick="gotoNearProjectMarker(\'' + marker.getId() + '\')">' + f.get("name").toString() + '</a></p>');
        });*/
    });
    dragBox.on('boxstart', function () {
        toolSource.clear();
    });

    /*.....................框选结束....................................................*/


    /*.....................多边形选择....................................................*/
    var source = new ol.source.Vector({ wrapX: false });
    // create the interaction 
    //draw_interaction = new ol.interaction.Draw({ 
    //    source: paintingLayer.getSource(), 
    //    type: geomType 
    //}); 
    //// add it to the map 
    //map.addInteraction(draw_interaction); 
    var drag = new ol.interaction.Draw({
        source: source,
        type: "Polygon"
    });

    var iconStyle=new ol.style.Style({

        image: new ol.style.Icon(({
            anchor: [0.5, 1],
            scale: 0.2,
            anchorXUnits: 'fraction',
            anchorYUnits: 'pixels',
            src: '/scripts/gis/openlayers/resources/test.png'

        }))
    });
    var selFeaturePPSN=[];
    drag.on('drawend', function (event) {
        var extent = event.feature.getGeometry().getExtent();
        var extent1 = event.feature.getGeometry();
        var i = 0;
        var features = projectShpSource.getFeatures();
        for (i = 0; i < features.length; i++) {
            features[i].setStyle(null);//控制框选后显示或隐藏     
        };
        var str ='';
       // projectShpSource.forEachFeatureIntersectingExtent(extent, function (feature) {
        for (i = 0; i < features.length; i++) {     
            var coordinate = features[i].getGeometry().getCoordinates();
            if(extent1.intersectsCoordinate(coordinate)){
                var f = features[i];
                var point = f.getGeometry();
                f.setStyle(iconStyle);
                selFeaturePPSN.push(f.get('paperProjectSeqNo'));
                str += f.get('paperProjectSeqNo') + "%" + f.get('projectName') + " ";
            }
        }
        //});
        if (str != '') {
           
            var inputPLdata = document.getElementById("PLdatas");
            inputPLdata.innerText = str;
            // 点选工程列表
            BootstrapDialog.show({
                type: BootstrapDialog.TYPE_INFO,
                size: BootstrapDialog.SIZE_NORMAL,
                draggable: true,
                title: '选择竣工工程数据',
                message: $('<div></div>').load('/Map/ProjectInfoPL'),
            })
        }
    },this);
    

    /*.....................多边形选择结束....................................................*/

    $(document).ready(function () {
        $("#box-body-searchresult").slimScroll({
            height: 300,
            alwaysVisible: true
        });
        //             $("#project-content").slimScroll({
        //                 height: 200,
        //                 alwaysVisible: false
        //             });

        $('.btn').button();

        var resetToolBar = function () {
            toolSource.clear();
            map.removeEventListener("click");
            map.un('pointermove', pointerMoveHandler);
            if (helpTooltip) {
                map.removeOverlay(helpTooltip);
            }
            $(".tooltip-static").remove();
            if (measureTooltip) {
                map.removeOverlay(measureTooltip);
            }
            if (draw) map.removeInteraction(draw);
            if (dragBox) map.removeInteraction(dragBox);
            if (drag) map.removeInteraction(drag);
        };

        var clickFn = function (evt) {
            var feature = map.forEachFeatureAtPixel(evt.pixel,
                   function (feature, layer) {
                       return feature;
                   });
            if (feature) {
                var type = feature.get("type");
                if (type == 'jg') {
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_INFO,
                        size: BootstrapDialog.SIZE_NORMAL,
                        draggable: true,
                        title: '<i class="fa fa-building-o"></i> 工程信息',
                        message: $('<div></div>').load('/Map/ProjectInfo?id=' +feature.get("paperProjectSeqNo")),
                        buttons: [{
                            icon: 'glyphicon glyphicon-list-alt',
                            label: '案卷信息',
                            action: function (dialog) {
                                window.open("/Map/ArchiveList?projectid=" + feature.get("paperProjectSeqNo"));
                            }
                        }, {
                            icon: 'glyphicon glyphicon-globe',
                            label: '三维模型',
                            action: function (dialog) {
                                //if(flag="1")
                                //{
                                window.open("/Map/VrView?id=" + feature.get("dataid"));
                                //}
                                //else
                                //{
                                //    alert("该工程没有三维模型");
                                //}
                            }
                        }]
                    });
                }
            }
        }

        $("#option_yd").click(function () {
            resetToolBar();
           
        });
        $("#option_dx").click(function () {
            resetToolBar();
            map.removeEventListener("click");
            map.addEventListener("click", clickFn);
        });
        $("#option_kx").click(function () {
            resetToolBar();
            map.addInteraction(dragBox);
        });
        $("#option_polyx").click(function () {
            resetToolBar();
            map.addInteraction(drag);
        });
        
        $("#option_jl").click(function () {
            resetToolBar();
            typeSelect = 'LineString';
            addMeasureInteraction();
        });
        $("#option_mj").click(function () {
            resetToolBar();
            typeSelect = 'Polygon';
            addMeasureInteraction();
        });


        var boxSearchResult = $("#box-searchresult");
        var boxBodySearchResult = $("#box-body-searchresult");

        boxSearchResult.slideUp(1);

        $("#btn-searchresult-remove").click(function () {
            boxSearchResult.slideUp(500);
            boxBodySearchResult.html('');
            $("#text-search").val('');
            searchSource.clear();
            unitOverlayProjectContent.html('');
            unitOverlay.setPosition(undefined);
        });

        $("#btn-search").click(function () {
            var v = $("#text-search").val()
            var type = $("#select-search-type").val();
            if (v == "") return;
            boxSearchResult.slideDown(500);
            boxBodySearchResult.html('');
            unitOverlayProjectContent.html('');
            searchSource.clear();
            //searchResultSelect.getFeatures().clear();
            unitOverlay.setPosition(undefined);
            unitOverlayCloser.blur();
            if (type == "1") {
                //var fs = projectSource.getFeatures();
                var fs = projectShpSource.getFeatures();
                for (var i = 0; i < fs.length; i++) {
                    var f = fs[i];
                    if (f.get("name").toString().indexOf(v) > -1) {
                        //var point = f.getGeometry().getInteriorPoint();
                        var point = f.getGeometry();
                        var marker = new ol.Feature({
                            type: 'project',
                            id: (i + 1).toString(),
                            geometry: point,
                            labelPoint: point,
                            name: f.get("name").toString()
                        });
                        marker.setId(i);
                        marker.setStyle(searchLayerFeatureStyle(marker));
                        searchSource.addFeature(marker);
                        boxBodySearchResult.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + (i + 1).toString() + '</span></span><a style="color:blue; margin-left:15px" href="#" onClick="gotoProjectMarker(' + marker.getId() + ')">' + f.get("name").toString() + '</a></p>');
                    }
                    //fs[i].setStyle(null);
                }
            }
            if (type == "12") {
                var fs = projectSourceZZ.getFeatures();
                for (var i = 0; i < fs.length; i++) {
                    var f = fs[i];
                    if (f.get("name").toString().indexOf(v) > -1) {
                        var point = f.getGeometry().getInteriorPoint();
                        var marker = new ol.Feature({
                            type: 'project',
                            id: (i + 1).toString(),
                            geometry: point,
                            labelPoint: point,
                            name: f.get("name").toString()
                        });
                        marker.setId(i);
                        marker.setStyle(searchLayerFeatureStyle(marker));
                        searchSource.addFeature(marker);
                        boxBodySearchResult.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + (i + 1).toString() + '</span></span><a style="color:blue; margin-left:15px" href="#" onClick="gotoProjectMarker(' + marker.getId() + ')">' + f.get("name").toString() + '</a></p>');
                    }
                }
            }
            if (type == "13") {
                var fs = projectSourceDL.getFeatures();
                for (var i = 0; i < fs.length; i++) {
                    var f = fs[i];
                    if (f.get("name").toString().indexOf(v) > -1) {
                        var point = f.getGeometry().getInteriorPoint();
                        var marker = new ol.Feature({
                            type: 'project',
                            id: (i + 1).toString(),
                            geometry: point,
                            labelPoint: point,
                            name: f.get("name").toString()
                        });
                        marker.setId(i);
                        marker.setStyle(searchLayerFeatureStyle(marker));
                        searchSource.addFeature(marker);
                        boxBodySearchResult.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + (i + 1).toString() + '</span></span><a style="color:blue; margin-left:15px" href="#" onClick="gotoProjectMarker(' + marker.getId() + ')">' + f.get("name").toString() + '</a></p>');
                    }
                }
            }
            if (type == "2") {
                var searchRequest = new ol.format.WFS().writeGetFeature({
                    srsName: 'EPSG:2385',//编码方式
                    featureNS: 'http://www.opengis.net/wms',//工作区地址
                    featurePrefix: 'Urban',//工作区名称
                    featureTypes: ['unit'],//存储以及图层名字
                    outputFormat: 'application/json',
                    filter: ol.format.filter.like('NAME', '*' + v + '*')
                });

                fetch('http://222.195.148.137:8080/geoserver/Urban/wms', {
                    method: 'POST',
                    body: new XMLSerializer().serializeToString(searchRequest)
                }).then(function (response) {
                    return response.json();
                }).then(function (json) {
                    var fs = new ol.format.GeoJSON().readFeatures(json);
                    searchSource.addFeatures(fs);
                    for (var i = 0; i < fs.length; i++) {
                        var f = fs[i];
                        var point = f.getGeometry().getPolygon(0).getInteriorPoint();
                        var marker = new ol.Feature({
                            type: 'unit',
                            id: (i + 1).toString(),
                            geometry: point,
                            labelPoint: point,
                            name: f.get("NAME")
                        });
                        marker.setId(i);
                        marker.setStyle(searchLayerFeatureStyle(marker));
                        searchSource.addFeature(marker);
                        boxBodySearchResult.append('<p><span class="pull-right-container"><span class="badge pull-left bg-red">' + (i + 1).toString() + '</span></span><a style="color:blue; margin-left:15px" href="#" onClick="gotoUnitMarker(' + marker.getId() + ')">' + f.get("NAME") + '</a></p>');
                    }
                });
            }
            if (type == "3") {
                var searchRequest = new ol.format.WFS().writeGetFeature({
                    srsName: 'EPSG:2385',
                    featureNS: 'http://www.opengis.net/wms',
                    featurePrefix: 'Urban',
                    featureTypes: ['road'],
                    outputFormat: 'application/json',
                    filter: ol.format.filter.like('MC', '*' + v + '*')
                });

                fetch('http://222.195.148.137:8080/geoserver/Urban/wms', {
                    method: 'POST',
                    body: new XMLSerializer().serializeToString(searchRequest)
                }).then(function (response) {
                    return response.json();
                }).then(function (json) {
                    var fs = new ol.format.GeoJSON().readFeatures(json);
                    searchSource.addFeatures(fs);
                    for (var i = 0; i < fs.length; i++) {
                        var f = fs[i];
                        var coord = f.getGeometry().getLineString(0).getCoordinateAt(0.5);
                        var marker = new ol.Feature({
                            type: 'road',
                            id: (i + 1).toString(),
                            geometry: new ol.geom.Point(coord),
                            labelPoint: new ol.geom.Point(coord),
                            name: f.get("MC")
                        });
                        marker.setId(i);
                        marker.setStyle(searchLayerFeatureStyle(marker));
                        searchSource.addFeature(marker);
                        boxBodySearchResult.append('<p><span class="pull-right-container"><span class="badge pull-left bg-red">' + (i + 1).toString() + '</span></span><a style="color:blue; margin-left:15px" href="#" onClick="gotoUnitMarker(' + marker.getId() + ')">' + f.get("MC") + '</a></p>');
                    }
                });
            }
        });
    });
   @*var data=@Html.Raw(@ViewBag.projectList);
        projectShpSource.forEachFeature( function (feature) {
            i++;
            var f = feature;
            var fId = f.get("id");

            for (var i = 0; i < data.length; i++) {
                if (fId == data[i].paperProjectSeqNo){
                    marker.setName(data[i].projectName);                
                    marker.setProperties(projectName,data[i].projectName);           
                }               
            };
        
        });*@
</script>