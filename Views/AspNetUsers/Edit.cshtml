@model urban_archive.Models.AspNetUsers
@{
    ViewBag.Title = "编辑";
}

@*<h2>编辑用户信息</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Password)
        @*<div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div>
            <table class="table table-bordered dl-horizontal" style="width:600px;text-align:center;margin:0 auto;border:1px solid #408cca;margin-top:50px;background:#fff;">
                <tr class="linear">
                    <td colspan="2" style="color:white;font-size:18px;">
                        编辑用户信息
                    </td>
                </tr>
                <tr>
                    <td>
                        用户名
                    </td>
                    <td>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" , @style = "display:inline" } })
                    </td>
                </tr>
                <tr>
                    <td>
                        科室
                    </td>
                    <td>
                        @Html.DropDownList("DepartmentID", null, new { @class = "form-control", @style = "display:inline" })
                        @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })


                    </td>
                </tr>
                <tr>
                    <td>
                        职位
                    </td>
                    <td>
                        @Html.DropDownList("RoleID", null, new { @class = "form-control", @style = "display:inline" })
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })


                    </td>
                </tr>
                <tr>
                    <td>
                        电子邮箱
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "display:inline" } })
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <input type="submit" class="btn btn-default" value="保存" style="margin-right:10px;" /> |
                        @Html.ActionLink("返回", "Index", new { }, new { @class = "btn btn-default", @style = "margin-left:10px;" })
                    </td>

                </tr>
            </table>
        </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoleID")
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DepartmentID")
                        @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RoleId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.Name)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                @Html.HiddenFor(model => model.EmailConfirmed)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.EmailConfirmed)
                                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.PasswordHash)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.SecurityStamp)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.PhoneNumber)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PhoneNumberConfirmed)
                                @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.TwoFactorEnabled)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.TwoFactorEnabled)
                                @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.LockoutEndDateUtc)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.LockoutEnabled)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.LockoutEnabled)
                                @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @Html.HiddenFor(model => model.AccessFailedCount)
                @*<div class="form-group">
                        @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>*@
        </div>
        }

        @*<div>
            @Html.ActionLink("返回", "Index")
        </div>*@

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }


