//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace urban_archive {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DFYFeeListDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DFYFeeListDataSet : global::System.Data.DataSet {
        
        private FuyinFeeDetailDataTable tableFuyinFeeDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DFYFeeListDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DFYFeeListDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FuyinFeeDetail"] != null)) {
                    base.Tables.Add(new FuyinFeeDetailDataTable(ds.Tables["FuyinFeeDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FuyinFeeDetailDataTable FuyinFeeDetail {
            get {
                return this.tableFuyinFeeDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DFYFeeListDataSet cln = ((DFYFeeListDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FuyinFeeDetail"] != null)) {
                    base.Tables.Add(new FuyinFeeDetailDataTable(ds.Tables["FuyinFeeDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFuyinFeeDetail = ((FuyinFeeDetailDataTable)(base.Tables["FuyinFeeDetail"]));
            if ((initTable == true)) {
                if ((this.tableFuyinFeeDetail != null)) {
                    this.tableFuyinFeeDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DFYFeeListDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DFYFeeListDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFuyinFeeDetail = new FuyinFeeDetailDataTable();
            base.Tables.Add(this.tableFuyinFeeDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFuyinFeeDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DFYFeeListDataSet ds = new DFYFeeListDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FuyinFeeDetailRowChangeEventHandler(object sender, FuyinFeeDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FuyinFeeDetailDataTable : global::System.Data.TypedTableBase<FuyinFeeDetailRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnfeeListNo;
            
            private global::System.Data.DataColumn columnA4PageCnt;
            
            private global::System.Data.DataColumn columnA4DrawingCnt;
            
            private global::System.Data.DataColumn columnA4TextCnt;
            
            private global::System.Data.DataColumn columnA4DrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA4TextUnitPrice;
            
            private global::System.Data.DataColumn columnA4DrawingFee;
            
            private global::System.Data.DataColumn columnA4TextFee;
            
            private global::System.Data.DataColumn columnA3PageCnt;
            
            private global::System.Data.DataColumn columnA3DrawingCnt;
            
            private global::System.Data.DataColumn columnA3TextCnt;
            
            private global::System.Data.DataColumn columnA3DrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA3TextUnitPrice;
            
            private global::System.Data.DataColumn columnA3DrawingFee;
            
            private global::System.Data.DataColumn columnA3TextFee;
            
            private global::System.Data.DataColumn columnA2PageCnt;
            
            private global::System.Data.DataColumn columnA2DrawingCnt;
            
            private global::System.Data.DataColumn columnA2DrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA2DrawingFee;
            
            private global::System.Data.DataColumn columnA1PageCnt;
            
            private global::System.Data.DataColumn columnA1DrawingCnt;
            
            private global::System.Data.DataColumn columnA1DrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA1DrawingFee;
            
            private global::System.Data.DataColumn columnA0PageCnt;
            
            private global::System.Data.DataColumn columnA0DrawingCnt;
            
            private global::System.Data.DataColumn columnA0DrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA0DrawingFee;
            
            private global::System.Data.DataColumn columnA1AddPageCnt;
            
            private global::System.Data.DataColumn columnA1AddDrawingCnt;
            
            private global::System.Data.DataColumn columnA1AddDrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA1AddDrawingFee;
            
            private global::System.Data.DataColumn columnA0AddPageCnt;
            
            private global::System.Data.DataColumn columnA0AddDrawingCnt;
            
            private global::System.Data.DataColumn columnA0AddDrawingUnitPrice;
            
            private global::System.Data.DataColumn columnA0AddDrawingFee;
            
            private global::System.Data.DataColumn columntotalFee;
            
            private global::System.Data.DataColumn columndateCharged;
            
            private global::System.Data.DataColumn columnunitCharged;
            
            private global::System.Data.DataColumn columntheoryFee;
            
            private global::System.Data.DataColumn columnsearchNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailDataTable() {
                this.TableName = "FuyinFeeDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FuyinFeeDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FuyinFeeDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn feeListNoColumn {
                get {
                    return this.columnfeeListNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4PageCntColumn {
                get {
                    return this.columnA4PageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4DrawingCntColumn {
                get {
                    return this.columnA4DrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4TextCntColumn {
                get {
                    return this.columnA4TextCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4DrawingUnitPriceColumn {
                get {
                    return this.columnA4DrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4TextUnitPriceColumn {
                get {
                    return this.columnA4TextUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4DrawingFeeColumn {
                get {
                    return this.columnA4DrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A4TextFeeColumn {
                get {
                    return this.columnA4TextFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3PageCntColumn {
                get {
                    return this.columnA3PageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3DrawingCntColumn {
                get {
                    return this.columnA3DrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3TextCntColumn {
                get {
                    return this.columnA3TextCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3DrawingUnitPriceColumn {
                get {
                    return this.columnA3DrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3TextUnitPriceColumn {
                get {
                    return this.columnA3TextUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3DrawingFeeColumn {
                get {
                    return this.columnA3DrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A3TextFeeColumn {
                get {
                    return this.columnA3TextFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A2PageCntColumn {
                get {
                    return this.columnA2PageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A2DrawingCntColumn {
                get {
                    return this.columnA2DrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A2DrawingUnitPriceColumn {
                get {
                    return this.columnA2DrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A2DrawingFeeColumn {
                get {
                    return this.columnA2DrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1PageCntColumn {
                get {
                    return this.columnA1PageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1DrawingCntColumn {
                get {
                    return this.columnA1DrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1DrawingUnitPriceColumn {
                get {
                    return this.columnA1DrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1DrawingFeeColumn {
                get {
                    return this.columnA1DrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0PageCntColumn {
                get {
                    return this.columnA0PageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0DrawingCntColumn {
                get {
                    return this.columnA0DrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0DrawingUnitPriceColumn {
                get {
                    return this.columnA0DrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0DrawingFeeColumn {
                get {
                    return this.columnA0DrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1AddPageCntColumn {
                get {
                    return this.columnA1AddPageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1AddDrawingCntColumn {
                get {
                    return this.columnA1AddDrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1AddDrawingUnitPriceColumn {
                get {
                    return this.columnA1AddDrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A1AddDrawingFeeColumn {
                get {
                    return this.columnA1AddDrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0AddPageCntColumn {
                get {
                    return this.columnA0AddPageCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0AddDrawingCntColumn {
                get {
                    return this.columnA0AddDrawingCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0AddDrawingUnitPriceColumn {
                get {
                    return this.columnA0AddDrawingUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn A0AddDrawingFeeColumn {
                get {
                    return this.columnA0AddDrawingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalFeeColumn {
                get {
                    return this.columntotalFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateChargedColumn {
                get {
                    return this.columndateCharged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unitChargedColumn {
                get {
                    return this.columnunitCharged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn theoryFeeColumn {
                get {
                    return this.columntheoryFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn searchNoColumn {
                get {
                    return this.columnsearchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRow this[int index] {
                get {
                    return ((FuyinFeeDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FuyinFeeDetailRowChangeEventHandler FuyinFeeDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FuyinFeeDetailRowChangeEventHandler FuyinFeeDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FuyinFeeDetailRowChangeEventHandler FuyinFeeDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FuyinFeeDetailRowChangeEventHandler FuyinFeeDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFuyinFeeDetailRow(FuyinFeeDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRow AddFuyinFeeDetailRow(
                        int ID, 
                        string feeListNo, 
                        int A4PageCnt, 
                        int A4DrawingCnt, 
                        int A4TextCnt, 
                        double A4DrawingUnitPrice, 
                        double A4TextUnitPrice, 
                        double A4DrawingFee, 
                        double A4TextFee, 
                        int A3PageCnt, 
                        int A3DrawingCnt, 
                        int A3TextCnt, 
                        double A3DrawingUnitPrice, 
                        double A3TextUnitPrice, 
                        double A3DrawingFee, 
                        double A3TextFee, 
                        int A2PageCnt, 
                        int A2DrawingCnt, 
                        double A2DrawingUnitPrice, 
                        double A2DrawingFee, 
                        int A1PageCnt, 
                        int A1DrawingCnt, 
                        double A1DrawingUnitPrice, 
                        double A1DrawingFee, 
                        int A0PageCnt, 
                        int A0DrawingCnt, 
                        double A0DrawingUnitPrice, 
                        double A0DrawingFee, 
                        int A1AddPageCnt, 
                        int A1AddDrawingCnt, 
                        double A1AddDrawingUnitPrice, 
                        double A1AddDrawingFee, 
                        int A0AddPageCnt, 
                        int A0AddDrawingCnt, 
                        double A0AddDrawingUnitPrice, 
                        double A0AddDrawingFee, 
                        double totalFee, 
                        System.DateTime dateCharged, 
                        string unitCharged, 
                        double theoryFee, 
                        string searchNo) {
                FuyinFeeDetailRow rowFuyinFeeDetailRow = ((FuyinFeeDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        feeListNo,
                        A4PageCnt,
                        A4DrawingCnt,
                        A4TextCnt,
                        A4DrawingUnitPrice,
                        A4TextUnitPrice,
                        A4DrawingFee,
                        A4TextFee,
                        A3PageCnt,
                        A3DrawingCnt,
                        A3TextCnt,
                        A3DrawingUnitPrice,
                        A3TextUnitPrice,
                        A3DrawingFee,
                        A3TextFee,
                        A2PageCnt,
                        A2DrawingCnt,
                        A2DrawingUnitPrice,
                        A2DrawingFee,
                        A1PageCnt,
                        A1DrawingCnt,
                        A1DrawingUnitPrice,
                        A1DrawingFee,
                        A0PageCnt,
                        A0DrawingCnt,
                        A0DrawingUnitPrice,
                        A0DrawingFee,
                        A1AddPageCnt,
                        A1AddDrawingCnt,
                        A1AddDrawingUnitPrice,
                        A1AddDrawingFee,
                        A0AddPageCnt,
                        A0AddDrawingCnt,
                        A0AddDrawingUnitPrice,
                        A0AddDrawingFee,
                        totalFee,
                        dateCharged,
                        unitCharged,
                        theoryFee,
                        searchNo};
                rowFuyinFeeDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFuyinFeeDetailRow);
                return rowFuyinFeeDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRow FindByID(int ID) {
                return ((FuyinFeeDetailRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FuyinFeeDetailDataTable cln = ((FuyinFeeDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FuyinFeeDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnfeeListNo = base.Columns["feeListNo"];
                this.columnA4PageCnt = base.Columns["A4PageCnt"];
                this.columnA4DrawingCnt = base.Columns["A4DrawingCnt"];
                this.columnA4TextCnt = base.Columns["A4TextCnt"];
                this.columnA4DrawingUnitPrice = base.Columns["A4DrawingUnitPrice"];
                this.columnA4TextUnitPrice = base.Columns["A4TextUnitPrice"];
                this.columnA4DrawingFee = base.Columns["A4DrawingFee"];
                this.columnA4TextFee = base.Columns["A4TextFee"];
                this.columnA3PageCnt = base.Columns["A3PageCnt"];
                this.columnA3DrawingCnt = base.Columns["A3DrawingCnt"];
                this.columnA3TextCnt = base.Columns["A3TextCnt"];
                this.columnA3DrawingUnitPrice = base.Columns["A3DrawingUnitPrice"];
                this.columnA3TextUnitPrice = base.Columns["A3TextUnitPrice"];
                this.columnA3DrawingFee = base.Columns["A3DrawingFee"];
                this.columnA3TextFee = base.Columns["A3TextFee"];
                this.columnA2PageCnt = base.Columns["A2PageCnt"];
                this.columnA2DrawingCnt = base.Columns["A2DrawingCnt"];
                this.columnA2DrawingUnitPrice = base.Columns["A2DrawingUnitPrice"];
                this.columnA2DrawingFee = base.Columns["A2DrawingFee"];
                this.columnA1PageCnt = base.Columns["A1PageCnt"];
                this.columnA1DrawingCnt = base.Columns["A1DrawingCnt"];
                this.columnA1DrawingUnitPrice = base.Columns["A1DrawingUnitPrice"];
                this.columnA1DrawingFee = base.Columns["A1DrawingFee"];
                this.columnA0PageCnt = base.Columns["A0PageCnt"];
                this.columnA0DrawingCnt = base.Columns["A0DrawingCnt"];
                this.columnA0DrawingUnitPrice = base.Columns["A0DrawingUnitPrice"];
                this.columnA0DrawingFee = base.Columns["A0DrawingFee"];
                this.columnA1AddPageCnt = base.Columns["A1AddPageCnt"];
                this.columnA1AddDrawingCnt = base.Columns["A1AddDrawingCnt"];
                this.columnA1AddDrawingUnitPrice = base.Columns["A1AddDrawingUnitPrice"];
                this.columnA1AddDrawingFee = base.Columns["A1AddDrawingFee"];
                this.columnA0AddPageCnt = base.Columns["A0AddPageCnt"];
                this.columnA0AddDrawingCnt = base.Columns["A0AddDrawingCnt"];
                this.columnA0AddDrawingUnitPrice = base.Columns["A0AddDrawingUnitPrice"];
                this.columnA0AddDrawingFee = base.Columns["A0AddDrawingFee"];
                this.columntotalFee = base.Columns["totalFee"];
                this.columndateCharged = base.Columns["dateCharged"];
                this.columnunitCharged = base.Columns["unitCharged"];
                this.columntheoryFee = base.Columns["theoryFee"];
                this.columnsearchNo = base.Columns["searchNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnfeeListNo = new global::System.Data.DataColumn("feeListNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeeListNo);
                this.columnA4PageCnt = new global::System.Data.DataColumn("A4PageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4PageCnt);
                this.columnA4DrawingCnt = new global::System.Data.DataColumn("A4DrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4DrawingCnt);
                this.columnA4TextCnt = new global::System.Data.DataColumn("A4TextCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4TextCnt);
                this.columnA4DrawingUnitPrice = new global::System.Data.DataColumn("A4DrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4DrawingUnitPrice);
                this.columnA4TextUnitPrice = new global::System.Data.DataColumn("A4TextUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4TextUnitPrice);
                this.columnA4DrawingFee = new global::System.Data.DataColumn("A4DrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4DrawingFee);
                this.columnA4TextFee = new global::System.Data.DataColumn("A4TextFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA4TextFee);
                this.columnA3PageCnt = new global::System.Data.DataColumn("A3PageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3PageCnt);
                this.columnA3DrawingCnt = new global::System.Data.DataColumn("A3DrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3DrawingCnt);
                this.columnA3TextCnt = new global::System.Data.DataColumn("A3TextCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3TextCnt);
                this.columnA3DrawingUnitPrice = new global::System.Data.DataColumn("A3DrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3DrawingUnitPrice);
                this.columnA3TextUnitPrice = new global::System.Data.DataColumn("A3TextUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3TextUnitPrice);
                this.columnA3DrawingFee = new global::System.Data.DataColumn("A3DrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3DrawingFee);
                this.columnA3TextFee = new global::System.Data.DataColumn("A3TextFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA3TextFee);
                this.columnA2PageCnt = new global::System.Data.DataColumn("A2PageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2PageCnt);
                this.columnA2DrawingCnt = new global::System.Data.DataColumn("A2DrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2DrawingCnt);
                this.columnA2DrawingUnitPrice = new global::System.Data.DataColumn("A2DrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2DrawingUnitPrice);
                this.columnA2DrawingFee = new global::System.Data.DataColumn("A2DrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA2DrawingFee);
                this.columnA1PageCnt = new global::System.Data.DataColumn("A1PageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1PageCnt);
                this.columnA1DrawingCnt = new global::System.Data.DataColumn("A1DrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1DrawingCnt);
                this.columnA1DrawingUnitPrice = new global::System.Data.DataColumn("A1DrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1DrawingUnitPrice);
                this.columnA1DrawingFee = new global::System.Data.DataColumn("A1DrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1DrawingFee);
                this.columnA0PageCnt = new global::System.Data.DataColumn("A0PageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0PageCnt);
                this.columnA0DrawingCnt = new global::System.Data.DataColumn("A0DrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0DrawingCnt);
                this.columnA0DrawingUnitPrice = new global::System.Data.DataColumn("A0DrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0DrawingUnitPrice);
                this.columnA0DrawingFee = new global::System.Data.DataColumn("A0DrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0DrawingFee);
                this.columnA1AddPageCnt = new global::System.Data.DataColumn("A1AddPageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1AddPageCnt);
                this.columnA1AddDrawingCnt = new global::System.Data.DataColumn("A1AddDrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1AddDrawingCnt);
                this.columnA1AddDrawingUnitPrice = new global::System.Data.DataColumn("A1AddDrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1AddDrawingUnitPrice);
                this.columnA1AddDrawingFee = new global::System.Data.DataColumn("A1AddDrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA1AddDrawingFee);
                this.columnA0AddPageCnt = new global::System.Data.DataColumn("A0AddPageCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0AddPageCnt);
                this.columnA0AddDrawingCnt = new global::System.Data.DataColumn("A0AddDrawingCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0AddDrawingCnt);
                this.columnA0AddDrawingUnitPrice = new global::System.Data.DataColumn("A0AddDrawingUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0AddDrawingUnitPrice);
                this.columnA0AddDrawingFee = new global::System.Data.DataColumn("A0AddDrawingFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA0AddDrawingFee);
                this.columntotalFee = new global::System.Data.DataColumn("totalFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalFee);
                this.columndateCharged = new global::System.Data.DataColumn("dateCharged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateCharged);
                this.columnunitCharged = new global::System.Data.DataColumn("unitCharged", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunitCharged);
                this.columntheoryFee = new global::System.Data.DataColumn("theoryFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntheoryFee);
                this.columnsearchNo = new global::System.Data.DataColumn("searchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsearchNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnfeeListNo.AllowDBNull = false;
                this.columnfeeListNo.MaxLength = 20;
                this.columnunitCharged.MaxLength = 10;
                this.columnsearchNo.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRow NewFuyinFeeDetailRow() {
                return ((FuyinFeeDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FuyinFeeDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FuyinFeeDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FuyinFeeDetailRowChanged != null)) {
                    this.FuyinFeeDetailRowChanged(this, new FuyinFeeDetailRowChangeEvent(((FuyinFeeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FuyinFeeDetailRowChanging != null)) {
                    this.FuyinFeeDetailRowChanging(this, new FuyinFeeDetailRowChangeEvent(((FuyinFeeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FuyinFeeDetailRowDeleted != null)) {
                    this.FuyinFeeDetailRowDeleted(this, new FuyinFeeDetailRowChangeEvent(((FuyinFeeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FuyinFeeDetailRowDeleting != null)) {
                    this.FuyinFeeDetailRowDeleting(this, new FuyinFeeDetailRowChangeEvent(((FuyinFeeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFuyinFeeDetailRow(FuyinFeeDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DFYFeeListDataSet ds = new DFYFeeListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FuyinFeeDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FuyinFeeDetailRow : global::System.Data.DataRow {
            
            private FuyinFeeDetailDataTable tableFuyinFeeDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FuyinFeeDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFuyinFeeDetail = ((FuyinFeeDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableFuyinFeeDetail.IDColumn]));
                }
                set {
                    this[this.tableFuyinFeeDetail.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string feeListNo {
                get {
                    return ((string)(this[this.tableFuyinFeeDetail.feeListNoColumn]));
                }
                set {
                    this[this.tableFuyinFeeDetail.feeListNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A4PageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A4PageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4PageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4PageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A4DrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A4DrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4DrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4DrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A4TextCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A4TextCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4TextCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4TextCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A4DrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A4DrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4DrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4DrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A4TextUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A4TextUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4TextUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4TextUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A4DrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A4DrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4DrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4DrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A4TextFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A4TextFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A4TextFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A4TextFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A3PageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A3PageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3PageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3PageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A3DrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A3DrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3DrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3DrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A3TextCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A3TextCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3TextCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3TextCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A3DrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A3DrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3DrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3DrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A3TextUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A3TextUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3TextUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3TextUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A3DrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A3DrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3DrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3DrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A3TextFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A3TextFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A3TextFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A3TextFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A2PageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A2PageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A2PageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A2PageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A2DrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A2DrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A2DrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A2DrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A2DrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A2DrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A2DrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A2DrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A2DrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A2DrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A2DrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A2DrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A1PageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A1PageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1PageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1PageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A1DrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A1DrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1DrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1DrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A1DrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A1DrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1DrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1DrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A1DrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A1DrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1DrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1DrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A0PageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A0PageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0PageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0PageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A0DrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A0DrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0DrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0DrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A0DrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A0DrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0DrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0DrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A0DrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A0DrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0DrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0DrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A1AddPageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A1AddPageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1AddPageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1AddPageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A1AddDrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A1AddDrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1AddDrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1AddDrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A1AddDrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A1AddDrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1AddDrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1AddDrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A1AddDrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A1AddDrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A1AddDrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A1AddDrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A0AddPageCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A0AddPageCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0AddPageCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0AddPageCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A0AddDrawingCnt {
                get {
                    try {
                        return ((int)(this[this.tableFuyinFeeDetail.A0AddDrawingCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0AddDrawingCnt”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0AddDrawingCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A0AddDrawingUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A0AddDrawingUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0AddDrawingUnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0AddDrawingUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double A0AddDrawingFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.A0AddDrawingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“A0AddDrawingFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.A0AddDrawingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double totalFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.totalFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“totalFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.totalFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateCharged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFuyinFeeDetail.dateChargedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“dateCharged”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.dateChargedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unitCharged {
                get {
                    try {
                        return ((string)(this[this.tableFuyinFeeDetail.unitChargedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“unitCharged”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.unitChargedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double theoryFee {
                get {
                    try {
                        return ((double)(this[this.tableFuyinFeeDetail.theoryFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“theoryFee”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.theoryFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string searchNo {
                get {
                    try {
                        return ((string)(this[this.tableFuyinFeeDetail.searchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FuyinFeeDetail”中列“searchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFuyinFeeDetail.searchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4PageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4PageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4PageCntNull() {
                this[this.tableFuyinFeeDetail.A4PageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4DrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4DrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4DrawingCntNull() {
                this[this.tableFuyinFeeDetail.A4DrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4TextCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4TextCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4TextCntNull() {
                this[this.tableFuyinFeeDetail.A4TextCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4DrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4DrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4DrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A4DrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4TextUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4TextUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4TextUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A4TextUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4DrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4DrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4DrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A4DrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA4TextFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A4TextFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA4TextFeeNull() {
                this[this.tableFuyinFeeDetail.A4TextFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3PageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3PageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3PageCntNull() {
                this[this.tableFuyinFeeDetail.A3PageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3DrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3DrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3DrawingCntNull() {
                this[this.tableFuyinFeeDetail.A3DrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3TextCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3TextCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3TextCntNull() {
                this[this.tableFuyinFeeDetail.A3TextCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3DrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3DrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3DrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A3DrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3TextUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3TextUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3TextUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A3TextUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3DrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3DrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3DrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A3DrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA3TextFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A3TextFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA3TextFeeNull() {
                this[this.tableFuyinFeeDetail.A3TextFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA2PageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A2PageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA2PageCntNull() {
                this[this.tableFuyinFeeDetail.A2PageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA2DrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A2DrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA2DrawingCntNull() {
                this[this.tableFuyinFeeDetail.A2DrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA2DrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A2DrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA2DrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A2DrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA2DrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A2DrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA2DrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A2DrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1PageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1PageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1PageCntNull() {
                this[this.tableFuyinFeeDetail.A1PageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1DrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1DrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1DrawingCntNull() {
                this[this.tableFuyinFeeDetail.A1DrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1DrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1DrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1DrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A1DrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1DrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1DrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1DrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A1DrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0PageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0PageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0PageCntNull() {
                this[this.tableFuyinFeeDetail.A0PageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0DrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0DrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0DrawingCntNull() {
                this[this.tableFuyinFeeDetail.A0DrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0DrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0DrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0DrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A0DrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0DrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0DrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0DrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A0DrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1AddPageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1AddPageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1AddPageCntNull() {
                this[this.tableFuyinFeeDetail.A1AddPageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1AddDrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1AddDrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1AddDrawingCntNull() {
                this[this.tableFuyinFeeDetail.A1AddDrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1AddDrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1AddDrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1AddDrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A1AddDrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA1AddDrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A1AddDrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA1AddDrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A1AddDrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0AddPageCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0AddPageCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0AddPageCntNull() {
                this[this.tableFuyinFeeDetail.A0AddPageCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0AddDrawingCntNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0AddDrawingCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0AddDrawingCntNull() {
                this[this.tableFuyinFeeDetail.A0AddDrawingCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0AddDrawingUnitPriceNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0AddDrawingUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0AddDrawingUnitPriceNull() {
                this[this.tableFuyinFeeDetail.A0AddDrawingUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsA0AddDrawingFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.A0AddDrawingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetA0AddDrawingFeeNull() {
                this[this.tableFuyinFeeDetail.A0AddDrawingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.totalFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalFeeNull() {
                this[this.tableFuyinFeeDetail.totalFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateChargedNull() {
                return this.IsNull(this.tableFuyinFeeDetail.dateChargedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateChargedNull() {
                this[this.tableFuyinFeeDetail.dateChargedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsunitChargedNull() {
                return this.IsNull(this.tableFuyinFeeDetail.unitChargedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetunitChargedNull() {
                this[this.tableFuyinFeeDetail.unitChargedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstheoryFeeNull() {
                return this.IsNull(this.tableFuyinFeeDetail.theoryFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettheoryFeeNull() {
                this[this.tableFuyinFeeDetail.theoryFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssearchNoNull() {
                return this.IsNull(this.tableFuyinFeeDetail.searchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsearchNoNull() {
                this[this.tableFuyinFeeDetail.searchNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FuyinFeeDetailRowChangeEvent : global::System.EventArgs {
            
            private FuyinFeeDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRowChangeEvent(FuyinFeeDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FuyinFeeDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace urban_archive.DFYFeeListDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FuyinFeeDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FuyinFeeDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FuyinFeeDetail";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("feeListNo", "feeListNo");
            tableMapping.ColumnMappings.Add("A4PageCnt", "A4PageCnt");
            tableMapping.ColumnMappings.Add("A4DrawingCnt", "A4DrawingCnt");
            tableMapping.ColumnMappings.Add("A4TextCnt", "A4TextCnt");
            tableMapping.ColumnMappings.Add("A4DrawingUnitPrice", "A4DrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A4TextUnitPrice", "A4TextUnitPrice");
            tableMapping.ColumnMappings.Add("A4DrawingFee", "A4DrawingFee");
            tableMapping.ColumnMappings.Add("A4TextFee", "A4TextFee");
            tableMapping.ColumnMappings.Add("A3PageCnt", "A3PageCnt");
            tableMapping.ColumnMappings.Add("A3DrawingCnt", "A3DrawingCnt");
            tableMapping.ColumnMappings.Add("A3TextCnt", "A3TextCnt");
            tableMapping.ColumnMappings.Add("A3DrawingUnitPrice", "A3DrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A3TextUnitPrice", "A3TextUnitPrice");
            tableMapping.ColumnMappings.Add("A3DrawingFee", "A3DrawingFee");
            tableMapping.ColumnMappings.Add("A3TextFee", "A3TextFee");
            tableMapping.ColumnMappings.Add("A2PageCnt", "A2PageCnt");
            tableMapping.ColumnMappings.Add("A2DrawingCnt", "A2DrawingCnt");
            tableMapping.ColumnMappings.Add("A2DrawingUnitPrice", "A2DrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A2DrawingFee", "A2DrawingFee");
            tableMapping.ColumnMappings.Add("A1PageCnt", "A1PageCnt");
            tableMapping.ColumnMappings.Add("A1DrawingCnt", "A1DrawingCnt");
            tableMapping.ColumnMappings.Add("A1DrawingUnitPrice", "A1DrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A1DrawingFee", "A1DrawingFee");
            tableMapping.ColumnMappings.Add("A0PageCnt", "A0PageCnt");
            tableMapping.ColumnMappings.Add("A0DrawingCnt", "A0DrawingCnt");
            tableMapping.ColumnMappings.Add("A0DrawingUnitPrice", "A0DrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A0DrawingFee", "A0DrawingFee");
            tableMapping.ColumnMappings.Add("A1AddPageCnt", "A1AddPageCnt");
            tableMapping.ColumnMappings.Add("A1AddDrawingCnt", "A1AddDrawingCnt");
            tableMapping.ColumnMappings.Add("A1AddDrawingUnitPrice", "A1AddDrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A1AddDrawingFee", "A1AddDrawingFee");
            tableMapping.ColumnMappings.Add("A0AddPageCnt", "A0AddPageCnt");
            tableMapping.ColumnMappings.Add("A0AddDrawingCnt", "A0AddDrawingCnt");
            tableMapping.ColumnMappings.Add("A0AddDrawingUnitPrice", "A0AddDrawingUnitPrice");
            tableMapping.ColumnMappings.Add("A0AddDrawingFee", "A0AddDrawingFee");
            tableMapping.ColumnMappings.Add("totalFee", "totalFee");
            tableMapping.ColumnMappings.Add("dateCharged", "dateCharged");
            tableMapping.ColumnMappings.Add("unitCharged", "unitCharged");
            tableMapping.ColumnMappings.Add("theoryFee", "theoryFee");
            tableMapping.ColumnMappings.Add("searchNo", "searchNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FuyinFeeDetail] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FuyinFeeDetail] ([ID], [feeListNo], [A4PageCnt], [A4DrawingCnt], [A4TextCnt], [A4DrawingUnitPrice], [A4TextUnitPrice], [A4DrawingFee], [A4TextFee], [A3PageCnt], [A3DrawingCnt], [A3TextCnt], [A3DrawingUnitPrice], [A3TextUnitPrice], [A3DrawingFee], [A3TextFee], [A2PageCnt], [A2DrawingCnt], [A2DrawingUnitPrice], [A2DrawingFee], [A1PageCnt], [A1DrawingCnt], [A1DrawingUnitPrice], [A1DrawingFee], [A0PageCnt], [A0DrawingCnt], [A0DrawingUnitPrice], [A0DrawingFee], [A1AddPageCnt], [A1AddDrawingCnt], [A1AddDrawingUnitPrice], [A1AddDrawingFee], [A0AddPageCnt], [A0AddDrawingCnt], [A0AddDrawingUnitPrice], [A0AddDrawingFee], [totalFee], [dateCharged], [unitCharged], [theoryFee], [searchNo]) VALUES (@ID, @feeListNo, @A4PageCnt, @A4DrawingCnt, @A4TextCnt, @A4DrawingUnitPrice, @A4TextUnitPrice, @A4DrawingFee, @A4TextFee, @A3PageCnt, @A3DrawingCnt, @A3TextCnt, @A3DrawingUnitPrice, @A3TextUnitPrice, @A3DrawingFee, @A3TextFee, @A2PageCnt, @A2DrawingCnt, @A2DrawingUnitPrice, @A2DrawingFee, @A1PageCnt, @A1DrawingCnt, @A1DrawingUnitPrice, @A1DrawingFee, @A0PageCnt, @A0DrawingCnt, @A0DrawingUnitPrice, @A0DrawingFee, @A1AddPageCnt, @A1AddDrawingCnt, @A1AddDrawingUnitPrice, @A1AddDrawingFee, @A0AddPageCnt, @A0AddDrawingCnt, @A0AddDrawingUnitPrice, @A0AddDrawingFee, @totalFee, @dateCharged, @unitCharged, @theoryFee, @searchNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@feeListNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "feeListNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddPageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddPageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddPageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddPageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateCharged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateCharged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unitCharged", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitCharged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@theoryFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "theoryFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@searchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "searchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FuyinFeeDetail] SET [ID] = @ID, [feeListNo] = @feeListNo, [A4PageCnt] = @A4PageCnt, [A4DrawingCnt] = @A4DrawingCnt, [A4TextCnt] = @A4TextCnt, [A4DrawingUnitPrice] = @A4DrawingUnitPrice, [A4TextUnitPrice] = @A4TextUnitPrice, [A4DrawingFee] = @A4DrawingFee, [A4TextFee] = @A4TextFee, [A3PageCnt] = @A3PageCnt, [A3DrawingCnt] = @A3DrawingCnt, [A3TextCnt] = @A3TextCnt, [A3DrawingUnitPrice] = @A3DrawingUnitPrice, [A3TextUnitPrice] = @A3TextUnitPrice, [A3DrawingFee] = @A3DrawingFee, [A3TextFee] = @A3TextFee, [A2PageCnt] = @A2PageCnt, [A2DrawingCnt] = @A2DrawingCnt, [A2DrawingUnitPrice] = @A2DrawingUnitPrice, [A2DrawingFee] = @A2DrawingFee, [A1PageCnt] = @A1PageCnt, [A1DrawingCnt] = @A1DrawingCnt, [A1DrawingUnitPrice] = @A1DrawingUnitPrice, [A1DrawingFee] = @A1DrawingFee, [A0PageCnt] = @A0PageCnt, [A0DrawingCnt] = @A0DrawingCnt, [A0DrawingUnitPrice] = @A0DrawingUnitPrice, [A0DrawingFee] = @A0DrawingFee, [A1AddPageCnt] = @A1AddPageCnt, [A1AddDrawingCnt] = @A1AddDrawingCnt, [A1AddDrawingUnitPrice] = @A1AddDrawingUnitPrice, [A1AddDrawingFee] = @A1AddDrawingFee, [A0AddPageCnt] = @A0AddPageCnt, [A0AddDrawingCnt] = @A0AddDrawingCnt, [A0AddDrawingUnitPrice] = @A0AddDrawingUnitPrice, [A0AddDrawingFee] = @A0AddDrawingFee, [totalFee] = @totalFee, [dateCharged] = @dateCharged, [unitCharged] = @unitCharged, [theoryFee] = @theoryFee, [searchNo] = @searchNo WHERE (([ID] = @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@feeListNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "feeListNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A4TextFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A4TextFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A3TextFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A3TextFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A2DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A2DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0PageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0PageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0DrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0DrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddPageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddPageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A1AddDrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A1AddDrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddPageCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddPageCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingCnt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingCnt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A0AddDrawingFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A0AddDrawingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateCharged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateCharged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unitCharged", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitCharged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@theoryFee", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "theoryFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@searchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "searchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["UrbanConConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, feeListNo, A4PageCnt, A4DrawingCnt, A4TextCnt, A4DrawingUnitPrice, A4TextUnitPrice, A4DrawingFee, A4TextFee, A3PageCnt, A3DrawingCnt, A3TextCnt, A3DrawingUnitPrice, A3TextUnitPrice, A3DrawingFee, A3TextFee, A2PageCnt, A2DrawingCnt, A2DrawingUnitPrice, A2DrawingFee, A1PageCnt, A1DrawingCnt, A1DrawingUnitPrice, A1DrawingFee, A0PageCnt, A0DrawingCnt, A0DrawingUnitPrice, A0DrawingFee, A1AddPageCnt, A1AddDrawingCnt, A1AddDrawingUnitPrice, A1AddDrawingFee, A0AddPageCnt, A0AddDrawingCnt, A0AddDrawingUnitPrice, A0AddDrawingFee, totalFee, dateCharged, unitCharged, theoryFee, searchNo FROM dbo.FuyinFeeDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DFYFeeListDataSet.FuyinFeeDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DFYFeeListDataSet.FuyinFeeDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DFYFeeListDataSet.FuyinFeeDetailDataTable dataTable = new DFYFeeListDataSet.FuyinFeeDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFYFeeListDataSet.FuyinFeeDetailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DFYFeeListDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FuyinFeeDetail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int ID, 
                    string feeListNo, 
                    global::System.Nullable<int> A4PageCnt, 
                    global::System.Nullable<int> A4DrawingCnt, 
                    global::System.Nullable<int> A4TextCnt, 
                    global::System.Nullable<double> A4DrawingUnitPrice, 
                    global::System.Nullable<double> A4TextUnitPrice, 
                    global::System.Nullable<double> A4DrawingFee, 
                    global::System.Nullable<double> A4TextFee, 
                    global::System.Nullable<int> A3PageCnt, 
                    global::System.Nullable<int> A3DrawingCnt, 
                    global::System.Nullable<int> A3TextCnt, 
                    global::System.Nullable<double> A3DrawingUnitPrice, 
                    global::System.Nullable<double> A3TextUnitPrice, 
                    global::System.Nullable<double> A3DrawingFee, 
                    global::System.Nullable<double> A3TextFee, 
                    global::System.Nullable<int> A2PageCnt, 
                    global::System.Nullable<int> A2DrawingCnt, 
                    global::System.Nullable<double> A2DrawingUnitPrice, 
                    global::System.Nullable<double> A2DrawingFee, 
                    global::System.Nullable<int> A1PageCnt, 
                    global::System.Nullable<int> A1DrawingCnt, 
                    global::System.Nullable<double> A1DrawingUnitPrice, 
                    global::System.Nullable<double> A1DrawingFee, 
                    global::System.Nullable<int> A0PageCnt, 
                    global::System.Nullable<int> A0DrawingCnt, 
                    global::System.Nullable<double> A0DrawingUnitPrice, 
                    global::System.Nullable<double> A0DrawingFee, 
                    global::System.Nullable<int> A1AddPageCnt, 
                    global::System.Nullable<int> A1AddDrawingCnt, 
                    global::System.Nullable<double> A1AddDrawingUnitPrice, 
                    global::System.Nullable<double> A1AddDrawingFee, 
                    global::System.Nullable<int> A0AddPageCnt, 
                    global::System.Nullable<int> A0AddDrawingCnt, 
                    global::System.Nullable<double> A0AddDrawingUnitPrice, 
                    global::System.Nullable<double> A0AddDrawingFee, 
                    global::System.Nullable<double> totalFee, 
                    global::System.Nullable<global::System.DateTime> dateCharged, 
                    string unitCharged, 
                    global::System.Nullable<double> theoryFee, 
                    string searchNo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            if ((feeListNo == null)) {
                throw new global::System.ArgumentNullException("feeListNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(feeListNo));
            }
            if ((A4PageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(A4PageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(A4DrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((A4TextCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(A4TextCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(A4DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((A4TextUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(A4TextUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(A4DrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((A4TextFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(A4TextFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((A3PageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(A3PageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(A3DrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((A3TextCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(A3TextCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(A3DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((A3TextUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(A3TextUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(A3DrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((A3TextFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(A3TextFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((A2PageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(A2PageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(A2DrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(A2DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(A2DrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((A1PageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(A1PageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(A1DrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(A1DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(A1DrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((A0PageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(A0PageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(A0DrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(A0DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(A0DrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((A1AddPageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(A1AddPageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(A1AddDrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(A1AddDrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(A1AddDrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((A0AddPageCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(A0AddPageCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingCnt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(A0AddDrawingCnt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingUnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(A0AddDrawingUnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(A0AddDrawingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((totalFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(totalFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((dateCharged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(dateCharged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((unitCharged == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(unitCharged));
            }
            if ((theoryFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(theoryFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((searchNo == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(searchNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    string feeListNo, 
                    global::System.Nullable<int> A4PageCnt, 
                    global::System.Nullable<int> A4DrawingCnt, 
                    global::System.Nullable<int> A4TextCnt, 
                    global::System.Nullable<double> A4DrawingUnitPrice, 
                    global::System.Nullable<double> A4TextUnitPrice, 
                    global::System.Nullable<double> A4DrawingFee, 
                    global::System.Nullable<double> A4TextFee, 
                    global::System.Nullable<int> A3PageCnt, 
                    global::System.Nullable<int> A3DrawingCnt, 
                    global::System.Nullable<int> A3TextCnt, 
                    global::System.Nullable<double> A3DrawingUnitPrice, 
                    global::System.Nullable<double> A3TextUnitPrice, 
                    global::System.Nullable<double> A3DrawingFee, 
                    global::System.Nullable<double> A3TextFee, 
                    global::System.Nullable<int> A2PageCnt, 
                    global::System.Nullable<int> A2DrawingCnt, 
                    global::System.Nullable<double> A2DrawingUnitPrice, 
                    global::System.Nullable<double> A2DrawingFee, 
                    global::System.Nullable<int> A1PageCnt, 
                    global::System.Nullable<int> A1DrawingCnt, 
                    global::System.Nullable<double> A1DrawingUnitPrice, 
                    global::System.Nullable<double> A1DrawingFee, 
                    global::System.Nullable<int> A0PageCnt, 
                    global::System.Nullable<int> A0DrawingCnt, 
                    global::System.Nullable<double> A0DrawingUnitPrice, 
                    global::System.Nullable<double> A0DrawingFee, 
                    global::System.Nullable<int> A1AddPageCnt, 
                    global::System.Nullable<int> A1AddDrawingCnt, 
                    global::System.Nullable<double> A1AddDrawingUnitPrice, 
                    global::System.Nullable<double> A1AddDrawingFee, 
                    global::System.Nullable<int> A0AddPageCnt, 
                    global::System.Nullable<int> A0AddDrawingCnt, 
                    global::System.Nullable<double> A0AddDrawingUnitPrice, 
                    global::System.Nullable<double> A0AddDrawingFee, 
                    global::System.Nullable<double> totalFee, 
                    global::System.Nullable<global::System.DateTime> dateCharged, 
                    string unitCharged, 
                    global::System.Nullable<double> theoryFee, 
                    string searchNo, 
                    int Original_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
            if ((feeListNo == null)) {
                throw new global::System.ArgumentNullException("feeListNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(feeListNo));
            }
            if ((A4PageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(A4PageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(A4DrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((A4TextCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(A4TextCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(A4DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((A4TextUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(A4TextUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((A4DrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(A4DrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((A4TextFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(A4TextFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((A3PageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(A3PageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(A3DrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((A3TextCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(A3TextCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(A3DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((A3TextUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(A3TextUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((A3DrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(A3DrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((A3TextFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(A3TextFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((A2PageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(A2PageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(A2DrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(A2DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((A2DrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(A2DrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((A1PageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(A1PageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(A1DrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(A1DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((A1DrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(A1DrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((A0PageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(A0PageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(A0DrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(A0DrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((A0DrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(A0DrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((A1AddPageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(A1AddPageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(A1AddDrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(A1AddDrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((A1AddDrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(A1AddDrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((A0AddPageCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(A0AddPageCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingCnt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(A0AddDrawingCnt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingUnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(A0AddDrawingUnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((A0AddDrawingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(A0AddDrawingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((totalFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(totalFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((dateCharged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(dateCharged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((unitCharged == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(unitCharged));
            }
            if ((theoryFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(theoryFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((searchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(searchNo));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string feeListNo, 
                    global::System.Nullable<int> A4PageCnt, 
                    global::System.Nullable<int> A4DrawingCnt, 
                    global::System.Nullable<int> A4TextCnt, 
                    global::System.Nullable<double> A4DrawingUnitPrice, 
                    global::System.Nullable<double> A4TextUnitPrice, 
                    global::System.Nullable<double> A4DrawingFee, 
                    global::System.Nullable<double> A4TextFee, 
                    global::System.Nullable<int> A3PageCnt, 
                    global::System.Nullable<int> A3DrawingCnt, 
                    global::System.Nullable<int> A3TextCnt, 
                    global::System.Nullable<double> A3DrawingUnitPrice, 
                    global::System.Nullable<double> A3TextUnitPrice, 
                    global::System.Nullable<double> A3DrawingFee, 
                    global::System.Nullable<double> A3TextFee, 
                    global::System.Nullable<int> A2PageCnt, 
                    global::System.Nullable<int> A2DrawingCnt, 
                    global::System.Nullable<double> A2DrawingUnitPrice, 
                    global::System.Nullable<double> A2DrawingFee, 
                    global::System.Nullable<int> A1PageCnt, 
                    global::System.Nullable<int> A1DrawingCnt, 
                    global::System.Nullable<double> A1DrawingUnitPrice, 
                    global::System.Nullable<double> A1DrawingFee, 
                    global::System.Nullable<int> A0PageCnt, 
                    global::System.Nullable<int> A0DrawingCnt, 
                    global::System.Nullable<double> A0DrawingUnitPrice, 
                    global::System.Nullable<double> A0DrawingFee, 
                    global::System.Nullable<int> A1AddPageCnt, 
                    global::System.Nullable<int> A1AddDrawingCnt, 
                    global::System.Nullable<double> A1AddDrawingUnitPrice, 
                    global::System.Nullable<double> A1AddDrawingFee, 
                    global::System.Nullable<int> A0AddPageCnt, 
                    global::System.Nullable<int> A0AddDrawingCnt, 
                    global::System.Nullable<double> A0AddDrawingUnitPrice, 
                    global::System.Nullable<double> A0AddDrawingFee, 
                    global::System.Nullable<double> totalFee, 
                    global::System.Nullable<global::System.DateTime> dateCharged, 
                    string unitCharged, 
                    global::System.Nullable<double> theoryFee, 
                    string searchNo, 
                    int Original_ID) {
            return this.Update(Original_ID, feeListNo, A4PageCnt, A4DrawingCnt, A4TextCnt, A4DrawingUnitPrice, A4TextUnitPrice, A4DrawingFee, A4TextFee, A3PageCnt, A3DrawingCnt, A3TextCnt, A3DrawingUnitPrice, A3TextUnitPrice, A3DrawingFee, A3TextFee, A2PageCnt, A2DrawingCnt, A2DrawingUnitPrice, A2DrawingFee, A1PageCnt, A1DrawingCnt, A1DrawingUnitPrice, A1DrawingFee, A0PageCnt, A0DrawingCnt, A0DrawingUnitPrice, A0DrawingFee, A1AddPageCnt, A1AddDrawingCnt, A1AddDrawingUnitPrice, A1AddDrawingFee, A0AddPageCnt, A0AddDrawingCnt, A0AddDrawingUnitPrice, A0AddDrawingFee, totalFee, dateCharged, unitCharged, theoryFee, searchNo, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FuyinFeeDetailTableAdapter _fuyinFeeDetailTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FuyinFeeDetailTableAdapter FuyinFeeDetailTableAdapter {
            get {
                return this._fuyinFeeDetailTableAdapter;
            }
            set {
                this._fuyinFeeDetailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fuyinFeeDetailTableAdapter != null) 
                            && (this._fuyinFeeDetailTableAdapter.Connection != null))) {
                    return this._fuyinFeeDetailTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fuyinFeeDetailTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DFYFeeListDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fuyinFeeDetailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FuyinFeeDetail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fuyinFeeDetailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DFYFeeListDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fuyinFeeDetailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FuyinFeeDetail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fuyinFeeDetailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DFYFeeListDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fuyinFeeDetailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FuyinFeeDetail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fuyinFeeDetailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DFYFeeListDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fuyinFeeDetailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fuyinFeeDetailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fuyinFeeDetailTableAdapter != null)) {
                    revertConnections.Add(this._fuyinFeeDetailTableAdapter, this._fuyinFeeDetailTableAdapter.Connection);
                    this._fuyinFeeDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fuyinFeeDetailTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fuyinFeeDetailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fuyinFeeDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fuyinFeeDetailTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fuyinFeeDetailTableAdapter != null)) {
                    this._fuyinFeeDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fuyinFeeDetailTableAdapter]));
                    this._fuyinFeeDetailTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591