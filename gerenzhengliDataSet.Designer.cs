//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace urban_archive {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("gerenzhengliDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class gerenzhengliDataSet : global::System.Data.DataSet {
        
        private PaperArchivesDataTable tablePaperArchives;
        
        private vw_archiveCollatorInfoDataTable tablevw_archiveCollatorInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public gerenzhengliDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected gerenzhengliDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PaperArchives"] != null)) {
                    base.Tables.Add(new PaperArchivesDataTable(ds.Tables["PaperArchives"]));
                }
                if ((ds.Tables["vw_archiveCollatorInfo"] != null)) {
                    base.Tables.Add(new vw_archiveCollatorInfoDataTable(ds.Tables["vw_archiveCollatorInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaperArchivesDataTable PaperArchives {
            get {
                return this.tablePaperArchives;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vw_archiveCollatorInfoDataTable vw_archiveCollatorInfo {
            get {
                return this.tablevw_archiveCollatorInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            gerenzhengliDataSet cln = ((gerenzhengliDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PaperArchives"] != null)) {
                    base.Tables.Add(new PaperArchivesDataTable(ds.Tables["PaperArchives"]));
                }
                if ((ds.Tables["vw_archiveCollatorInfo"] != null)) {
                    base.Tables.Add(new vw_archiveCollatorInfoDataTable(ds.Tables["vw_archiveCollatorInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePaperArchives = ((PaperArchivesDataTable)(base.Tables["PaperArchives"]));
            if ((initTable == true)) {
                if ((this.tablePaperArchives != null)) {
                    this.tablePaperArchives.InitVars();
                }
            }
            this.tablevw_archiveCollatorInfo = ((vw_archiveCollatorInfoDataTable)(base.Tables["vw_archiveCollatorInfo"]));
            if ((initTable == true)) {
                if ((this.tablevw_archiveCollatorInfo != null)) {
                    this.tablevw_archiveCollatorInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "gerenzhengliDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/gerenzhengliDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePaperArchives = new PaperArchivesDataTable();
            base.Tables.Add(this.tablePaperArchives);
            this.tablevw_archiveCollatorInfo = new vw_archiveCollatorInfoDataTable();
            base.Tables.Add(this.tablevw_archiveCollatorInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePaperArchives() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevw_archiveCollatorInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            gerenzhengliDataSet ds = new gerenzhengliDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PaperArchivesRowChangeEventHandler(object sender, PaperArchivesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vw_archiveCollatorInfoRowChangeEventHandler(object sender, vw_archiveCollatorInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaperArchivesDataTable : global::System.Data.TypedTableBase<PaperArchivesRow> {
            
            private global::System.Data.DataColumn columnpaperProjectSeqNo;
            
            private global::System.Data.DataColumn columnprojectNo;
            
            private global::System.Data.DataColumn columnprojectID;
            
            private global::System.Data.DataColumn columnfirstResponsible;
            
            private global::System.Data.DataColumn columnresponsibleOther;
            
            private global::System.Data.DataColumn columnsubmitPerson;
            
            private global::System.Data.DataColumn columntelphoneSubmitPerson;
            
            private global::System.Data.DataColumn columnmobilephoneSubmitPerson;
            
            private global::System.Data.DataColumn columnrecipient;
            
            private global::System.Data.DataColumn columndateReceived;
            
            private global::System.Data.DataColumn columncollator;
            
            private global::System.Data.DataColumn columncollationRequirement;
            
            private global::System.Data.DataColumn columnqjdyYear;
            
            private global::System.Data.DataColumn columnqjdyNo;
            
            private global::System.Data.DataColumn columnlqDate;
            
            private global::System.Data.DataColumn columnmainCategoryID;
            
            private global::System.Data.DataColumn columnsubDictionaryID;
            
            private global::System.Data.DataColumn columnminorDictionaryID;
            
            private global::System.Data.DataColumn columncsyj;
            
            private global::System.Data.DataColumn columncsyjPerson;
            
            private global::System.Data.DataColumn columncsyjDate;
            
            private global::System.Data.DataColumn columnfzryj;
            
            private global::System.Data.DataColumn columnfzryjPerson;
            
            private global::System.Data.DataColumn columnfzryjDate;
            
            private global::System.Data.DataColumn columnzgyj;
            
            private global::System.Data.DataColumn columnzgyjPerson;
            
            private global::System.Data.DataColumn columnzgyjDate;
            
            private global::System.Data.DataColumn columncharacterVolumeCount;
            
            private global::System.Data.DataColumn columncharacter2cm;
            
            private global::System.Data.DataColumn columncharacter3cm;
            
            private global::System.Data.DataColumn columncharacter4cm;
            
            private global::System.Data.DataColumn columncharacter5cm;
            
            private global::System.Data.DataColumn columndrawingVolumeCount;
            
            private global::System.Data.DataColumn columndrawing2cm;
            
            private global::System.Data.DataColumn columndrawing3cm;
            
            private global::System.Data.DataColumn columndrawing4cm;
            
            private global::System.Data.DataColumn columndrawing5cm;
            
            private global::System.Data.DataColumn columndateArchive;
            
            private global::System.Data.DataColumn columntransferPerson;
            
            private global::System.Data.DataColumn columntransferUnit;
            
            private global::System.Data.DataColumn columntransferDate;
            
            private global::System.Data.DataColumn columnpassingDate;
            
            private global::System.Data.DataColumn columnarchiveCertificateNo;
            
            private global::System.Data.DataColumn columnlqyjsDate;
            
            private global::System.Data.DataColumn columnlqperson;
            
            private global::System.Data.DataColumn columntransferContent;
            
            private global::System.Data.DataColumn columnprojectProfile;
            
            private global::System.Data.DataColumn columndateConstructed;
            
            private global::System.Data.DataColumn columnarchivesCount;
            
            private global::System.Data.DataColumn columnInchCountDetail;
            
            private global::System.Data.DataColumn columnoriginalVolumeCount;
            
            private global::System.Data.DataColumn columnoriginalInchCount;
            
            private global::System.Data.DataColumn columnoriginalMoneyAmount;
            
            private global::System.Data.DataColumn columncopyInchCount;
            
            private global::System.Data.DataColumn columncopyMoneyCount;
            
            private global::System.Data.DataColumn columntotalMoney;
            
            private global::System.Data.DataColumn columnstartArchiveNo;
            
            private global::System.Data.DataColumn columnendArchiveNo;
            
            private global::System.Data.DataColumn columnstartPaijiaNo;
            
            private global::System.Data.DataColumn columnendPaijiaNo;
            
            private global::System.Data.DataColumn columnstartRegisNo;
            
            private global::System.Data.DataColumn columnendRegisNo;
            
            private global::System.Data.DataColumn columnlicenseNo;
            
            private global::System.Data.DataColumn columnlicenseDate;
            
            private global::System.Data.DataColumn columnjgDate;
            
            private global::System.Data.DataColumn columnprojectStartDate;
            
            private global::System.Data.DataColumn columnprojectFinishDate;
            
            private global::System.Data.DataColumn columnchangeLog;
            
            private global::System.Data.DataColumn columnkeyWords;
            
            private global::System.Data.DataColumn columnnotearea;
            
            private global::System.Data.DataColumn columnremarks;
            
            private global::System.Data.DataColumn columnbuildingArea;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnunderground;
            
            private global::System.Data.DataColumn columnoverground;
            
            private global::System.Data.DataColumn columnstructureTypeID;
            
            private global::System.Data.DataColumn columntextMaterial;
            
            private global::System.Data.DataColumn columndrawing;
            
            private global::System.Data.DataColumn columnpaijiaRange;
            
            private global::System.Data.DataColumn columnprevClassNo;
            
            private global::System.Data.DataColumn columnPhotoCount;
            
            private global::System.Data.DataColumn columnbianhaoTime;
            
            private global::System.Data.DataColumn columnluruTime;
            
            private global::System.Data.DataColumn columnshizhengNoStart;
            
            private global::System.Data.DataColumn columnshizhengNoEnd;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columncharacter1cm;
            
            private global::System.Data.DataColumn columndrawing1cm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesDataTable() {
                this.TableName = "PaperArchives";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PaperArchivesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PaperArchivesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paperProjectSeqNoColumn {
                get {
                    return this.columnpaperProjectSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn projectNoColumn {
                get {
                    return this.columnprojectNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn projectIDColumn {
                get {
                    return this.columnprojectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn firstResponsibleColumn {
                get {
                    return this.columnfirstResponsible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn responsibleOtherColumn {
                get {
                    return this.columnresponsibleOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn submitPersonColumn {
                get {
                    return this.columnsubmitPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn telphoneSubmitPersonColumn {
                get {
                    return this.columntelphoneSubmitPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mobilephoneSubmitPersonColumn {
                get {
                    return this.columnmobilephoneSubmitPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipientColumn {
                get {
                    return this.columnrecipient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateReceivedColumn {
                get {
                    return this.columndateReceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn collatorColumn {
                get {
                    return this.columncollator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn collationRequirementColumn {
                get {
                    return this.columncollationRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qjdyYearColumn {
                get {
                    return this.columnqjdyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qjdyNoColumn {
                get {
                    return this.columnqjdyNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lqDateColumn {
                get {
                    return this.columnlqDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mainCategoryIDColumn {
                get {
                    return this.columnmainCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn subDictionaryIDColumn {
                get {
                    return this.columnsubDictionaryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn minorDictionaryIDColumn {
                get {
                    return this.columnminorDictionaryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn csyjColumn {
                get {
                    return this.columncsyj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn csyjPersonColumn {
                get {
                    return this.columncsyjPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn csyjDateColumn {
                get {
                    return this.columncsyjDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fzryjColumn {
                get {
                    return this.columnfzryj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fzryjPersonColumn {
                get {
                    return this.columnfzryjPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fzryjDateColumn {
                get {
                    return this.columnfzryjDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zgyjColumn {
                get {
                    return this.columnzgyj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zgyjPersonColumn {
                get {
                    return this.columnzgyjPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zgyjDateColumn {
                get {
                    return this.columnzgyjDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn characterVolumeCountColumn {
                get {
                    return this.columncharacterVolumeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn character2cmColumn {
                get {
                    return this.columncharacter2cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn character3cmColumn {
                get {
                    return this.columncharacter3cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn character4cmColumn {
                get {
                    return this.columncharacter4cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn character5cmColumn {
                get {
                    return this.columncharacter5cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawingVolumeCountColumn {
                get {
                    return this.columndrawingVolumeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawing2cmColumn {
                get {
                    return this.columndrawing2cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawing3cmColumn {
                get {
                    return this.columndrawing3cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawing4cmColumn {
                get {
                    return this.columndrawing4cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawing5cmColumn {
                get {
                    return this.columndrawing5cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateArchiveColumn {
                get {
                    return this.columndateArchive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transferPersonColumn {
                get {
                    return this.columntransferPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transferUnitColumn {
                get {
                    return this.columntransferUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transferDateColumn {
                get {
                    return this.columntransferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn passingDateColumn {
                get {
                    return this.columnpassingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn archiveCertificateNoColumn {
                get {
                    return this.columnarchiveCertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lqyjsDateColumn {
                get {
                    return this.columnlqyjsDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lqpersonColumn {
                get {
                    return this.columnlqperson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transferContentColumn {
                get {
                    return this.columntransferContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn projectProfileColumn {
                get {
                    return this.columnprojectProfile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateConstructedColumn {
                get {
                    return this.columndateConstructed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn archivesCountColumn {
                get {
                    return this.columnarchivesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InchCountDetailColumn {
                get {
                    return this.columnInchCountDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn originalVolumeCountColumn {
                get {
                    return this.columnoriginalVolumeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn originalInchCountColumn {
                get {
                    return this.columnoriginalInchCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn originalMoneyAmountColumn {
                get {
                    return this.columnoriginalMoneyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn copyInchCountColumn {
                get {
                    return this.columncopyInchCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn copyMoneyCountColumn {
                get {
                    return this.columncopyMoneyCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalMoneyColumn {
                get {
                    return this.columntotalMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startArchiveNoColumn {
                get {
                    return this.columnstartArchiveNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endArchiveNoColumn {
                get {
                    return this.columnendArchiveNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startPaijiaNoColumn {
                get {
                    return this.columnstartPaijiaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endPaijiaNoColumn {
                get {
                    return this.columnendPaijiaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn startRegisNoColumn {
                get {
                    return this.columnstartRegisNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn endRegisNoColumn {
                get {
                    return this.columnendRegisNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn licenseNoColumn {
                get {
                    return this.columnlicenseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn licenseDateColumn {
                get {
                    return this.columnlicenseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn jgDateColumn {
                get {
                    return this.columnjgDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn projectStartDateColumn {
                get {
                    return this.columnprojectStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn projectFinishDateColumn {
                get {
                    return this.columnprojectFinishDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn changeLogColumn {
                get {
                    return this.columnchangeLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn keyWordsColumn {
                get {
                    return this.columnkeyWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn noteareaColumn {
                get {
                    return this.columnnotearea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remarksColumn {
                get {
                    return this.columnremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn buildingAreaColumn {
                get {
                    return this.columnbuildingArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn undergroundColumn {
                get {
                    return this.columnunderground;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn overgroundColumn {
                get {
                    return this.columnoverground;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn structureTypeIDColumn {
                get {
                    return this.columnstructureTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn textMaterialColumn {
                get {
                    return this.columntextMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawingColumn {
                get {
                    return this.columndrawing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn paijiaRangeColumn {
                get {
                    return this.columnpaijiaRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prevClassNoColumn {
                get {
                    return this.columnprevClassNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoCountColumn {
                get {
                    return this.columnPhotoCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bianhaoTimeColumn {
                get {
                    return this.columnbianhaoTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn luruTimeColumn {
                get {
                    return this.columnluruTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shizhengNoStartColumn {
                get {
                    return this.columnshizhengNoStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shizhengNoEndColumn {
                get {
                    return this.columnshizhengNoEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn character1cmColumn {
                get {
                    return this.columncharacter1cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn drawing1cmColumn {
                get {
                    return this.columndrawing1cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRow this[int index] {
                get {
                    return ((PaperArchivesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaperArchivesRowChangeEventHandler PaperArchivesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaperArchivesRowChangeEventHandler PaperArchivesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaperArchivesRowChangeEventHandler PaperArchivesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PaperArchivesRowChangeEventHandler PaperArchivesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPaperArchivesRow(PaperArchivesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRow AddPaperArchivesRow(
                        long paperProjectSeqNo, 
                        long projectNo, 
                        long projectID, 
                        string firstResponsible, 
                        string responsibleOther, 
                        string submitPerson, 
                        string telphoneSubmitPerson, 
                        string mobilephoneSubmitPerson, 
                        string recipient, 
                        System.DateTime dateReceived, 
                        string collator, 
                        string collationRequirement, 
                        string qjdyYear, 
                        string qjdyNo, 
                        System.DateTime lqDate, 
                        string mainCategoryID, 
                        string subDictionaryID, 
                        string minorDictionaryID, 
                        string csyj, 
                        string csyjPerson, 
                        System.DateTime csyjDate, 
                        string fzryj, 
                        string fzryjPerson, 
                        System.DateTime fzryjDate, 
                        string zgyj, 
                        string zgyjPerson, 
                        System.DateTime zgyjDate, 
                        long characterVolumeCount, 
                        long character2cm, 
                        long character3cm, 
                        long character4cm, 
                        long character5cm, 
                        long drawingVolumeCount, 
                        long drawing2cm, 
                        long drawing3cm, 
                        long drawing4cm, 
                        long drawing5cm, 
                        System.DateTime dateArchive, 
                        string transferPerson, 
                        string transferUnit, 
                        System.DateTime transferDate, 
                        System.DateTime passingDate, 
                        string archiveCertificateNo, 
                        System.DateTime lqyjsDate, 
                        string lqperson, 
                        string transferContent, 
                        string projectProfile, 
                        System.DateTime dateConstructed, 
                        string archivesCount, 
                        string InchCountDetail, 
                        long originalVolumeCount, 
                        long originalInchCount, 
                        decimal originalMoneyAmount, 
                        long copyInchCount, 
                        decimal copyMoneyCount, 
                        decimal totalMoney, 
                        string startArchiveNo, 
                        string endArchiveNo, 
                        string startPaijiaNo, 
                        string endPaijiaNo, 
                        string startRegisNo, 
                        string endRegisNo, 
                        string licenseNo, 
                        string licenseDate, 
                        System.DateTime jgDate, 
                        string projectStartDate, 
                        string projectFinishDate, 
                        string changeLog, 
                        string keyWords, 
                        string notearea, 
                        string remarks, 
                        double buildingArea, 
                        double height, 
                        string underground, 
                        string overground, 
                        string structureTypeID, 
                        long textMaterial, 
                        long drawing, 
                        string paijiaRange, 
                        string prevClassNo, 
                        long PhotoCount, 
                        System.DateTime bianhaoTime, 
                        string luruTime, 
                        string shizhengNoStart, 
                        string shizhengNoEnd, 
                        long character1cm, 
                        long drawing1cm) {
                PaperArchivesRow rowPaperArchivesRow = ((PaperArchivesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        paperProjectSeqNo,
                        projectNo,
                        projectID,
                        firstResponsible,
                        responsibleOther,
                        submitPerson,
                        telphoneSubmitPerson,
                        mobilephoneSubmitPerson,
                        recipient,
                        dateReceived,
                        collator,
                        collationRequirement,
                        qjdyYear,
                        qjdyNo,
                        lqDate,
                        mainCategoryID,
                        subDictionaryID,
                        minorDictionaryID,
                        csyj,
                        csyjPerson,
                        csyjDate,
                        fzryj,
                        fzryjPerson,
                        fzryjDate,
                        zgyj,
                        zgyjPerson,
                        zgyjDate,
                        characterVolumeCount,
                        character2cm,
                        character3cm,
                        character4cm,
                        character5cm,
                        drawingVolumeCount,
                        drawing2cm,
                        drawing3cm,
                        drawing4cm,
                        drawing5cm,
                        dateArchive,
                        transferPerson,
                        transferUnit,
                        transferDate,
                        passingDate,
                        archiveCertificateNo,
                        lqyjsDate,
                        lqperson,
                        transferContent,
                        projectProfile,
                        dateConstructed,
                        archivesCount,
                        InchCountDetail,
                        originalVolumeCount,
                        originalInchCount,
                        originalMoneyAmount,
                        copyInchCount,
                        copyMoneyCount,
                        totalMoney,
                        startArchiveNo,
                        endArchiveNo,
                        startPaijiaNo,
                        endPaijiaNo,
                        startRegisNo,
                        endRegisNo,
                        licenseNo,
                        licenseDate,
                        jgDate,
                        projectStartDate,
                        projectFinishDate,
                        changeLog,
                        keyWords,
                        notearea,
                        remarks,
                        buildingArea,
                        height,
                        underground,
                        overground,
                        structureTypeID,
                        textMaterial,
                        drawing,
                        paijiaRange,
                        prevClassNo,
                        PhotoCount,
                        bianhaoTime,
                        luruTime,
                        shizhengNoStart,
                        shizhengNoEnd,
                        null,
                        character1cm,
                        drawing1cm};
                rowPaperArchivesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaperArchivesRow);
                return rowPaperArchivesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRow FindByID(int ID) {
                return ((PaperArchivesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PaperArchivesDataTable cln = ((PaperArchivesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaperArchivesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpaperProjectSeqNo = base.Columns["paperProjectSeqNo"];
                this.columnprojectNo = base.Columns["projectNo"];
                this.columnprojectID = base.Columns["projectID"];
                this.columnfirstResponsible = base.Columns["firstResponsible"];
                this.columnresponsibleOther = base.Columns["responsibleOther"];
                this.columnsubmitPerson = base.Columns["submitPerson"];
                this.columntelphoneSubmitPerson = base.Columns["telphoneSubmitPerson"];
                this.columnmobilephoneSubmitPerson = base.Columns["mobilephoneSubmitPerson"];
                this.columnrecipient = base.Columns["recipient"];
                this.columndateReceived = base.Columns["dateReceived"];
                this.columncollator = base.Columns["collator"];
                this.columncollationRequirement = base.Columns["collationRequirement"];
                this.columnqjdyYear = base.Columns["qjdyYear"];
                this.columnqjdyNo = base.Columns["qjdyNo"];
                this.columnlqDate = base.Columns["lqDate"];
                this.columnmainCategoryID = base.Columns["mainCategoryID"];
                this.columnsubDictionaryID = base.Columns["subDictionaryID"];
                this.columnminorDictionaryID = base.Columns["minorDictionaryID"];
                this.columncsyj = base.Columns["csyj"];
                this.columncsyjPerson = base.Columns["csyjPerson"];
                this.columncsyjDate = base.Columns["csyjDate"];
                this.columnfzryj = base.Columns["fzryj"];
                this.columnfzryjPerson = base.Columns["fzryjPerson"];
                this.columnfzryjDate = base.Columns["fzryjDate"];
                this.columnzgyj = base.Columns["zgyj"];
                this.columnzgyjPerson = base.Columns["zgyjPerson"];
                this.columnzgyjDate = base.Columns["zgyjDate"];
                this.columncharacterVolumeCount = base.Columns["characterVolumeCount"];
                this.columncharacter2cm = base.Columns["character2cm"];
                this.columncharacter3cm = base.Columns["character3cm"];
                this.columncharacter4cm = base.Columns["character4cm"];
                this.columncharacter5cm = base.Columns["character5cm"];
                this.columndrawingVolumeCount = base.Columns["drawingVolumeCount"];
                this.columndrawing2cm = base.Columns["drawing2cm"];
                this.columndrawing3cm = base.Columns["drawing3cm"];
                this.columndrawing4cm = base.Columns["drawing4cm"];
                this.columndrawing5cm = base.Columns["drawing5cm"];
                this.columndateArchive = base.Columns["dateArchive"];
                this.columntransferPerson = base.Columns["transferPerson"];
                this.columntransferUnit = base.Columns["transferUnit"];
                this.columntransferDate = base.Columns["transferDate"];
                this.columnpassingDate = base.Columns["passingDate"];
                this.columnarchiveCertificateNo = base.Columns["archiveCertificateNo"];
                this.columnlqyjsDate = base.Columns["lqyjsDate"];
                this.columnlqperson = base.Columns["lqperson"];
                this.columntransferContent = base.Columns["transferContent"];
                this.columnprojectProfile = base.Columns["projectProfile"];
                this.columndateConstructed = base.Columns["dateConstructed"];
                this.columnarchivesCount = base.Columns["archivesCount"];
                this.columnInchCountDetail = base.Columns["InchCountDetail"];
                this.columnoriginalVolumeCount = base.Columns["originalVolumeCount"];
                this.columnoriginalInchCount = base.Columns["originalInchCount"];
                this.columnoriginalMoneyAmount = base.Columns["originalMoneyAmount"];
                this.columncopyInchCount = base.Columns["copyInchCount"];
                this.columncopyMoneyCount = base.Columns["copyMoneyCount"];
                this.columntotalMoney = base.Columns["totalMoney"];
                this.columnstartArchiveNo = base.Columns["startArchiveNo"];
                this.columnendArchiveNo = base.Columns["endArchiveNo"];
                this.columnstartPaijiaNo = base.Columns["startPaijiaNo"];
                this.columnendPaijiaNo = base.Columns["endPaijiaNo"];
                this.columnstartRegisNo = base.Columns["startRegisNo"];
                this.columnendRegisNo = base.Columns["endRegisNo"];
                this.columnlicenseNo = base.Columns["licenseNo"];
                this.columnlicenseDate = base.Columns["licenseDate"];
                this.columnjgDate = base.Columns["jgDate"];
                this.columnprojectStartDate = base.Columns["projectStartDate"];
                this.columnprojectFinishDate = base.Columns["projectFinishDate"];
                this.columnchangeLog = base.Columns["changeLog"];
                this.columnkeyWords = base.Columns["keyWords"];
                this.columnnotearea = base.Columns["notearea"];
                this.columnremarks = base.Columns["remarks"];
                this.columnbuildingArea = base.Columns["buildingArea"];
                this.columnheight = base.Columns["height"];
                this.columnunderground = base.Columns["underground"];
                this.columnoverground = base.Columns["overground"];
                this.columnstructureTypeID = base.Columns["structureTypeID"];
                this.columntextMaterial = base.Columns["textMaterial"];
                this.columndrawing = base.Columns["drawing"];
                this.columnpaijiaRange = base.Columns["paijiaRange"];
                this.columnprevClassNo = base.Columns["prevClassNo"];
                this.columnPhotoCount = base.Columns["PhotoCount"];
                this.columnbianhaoTime = base.Columns["bianhaoTime"];
                this.columnluruTime = base.Columns["luruTime"];
                this.columnshizhengNoStart = base.Columns["shizhengNoStart"];
                this.columnshizhengNoEnd = base.Columns["shizhengNoEnd"];
                this.columnID = base.Columns["ID"];
                this.columncharacter1cm = base.Columns["character1cm"];
                this.columndrawing1cm = base.Columns["drawing1cm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpaperProjectSeqNo = new global::System.Data.DataColumn("paperProjectSeqNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaperProjectSeqNo);
                this.columnprojectNo = new global::System.Data.DataColumn("projectNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojectNo);
                this.columnprojectID = new global::System.Data.DataColumn("projectID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojectID);
                this.columnfirstResponsible = new global::System.Data.DataColumn("firstResponsible", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstResponsible);
                this.columnresponsibleOther = new global::System.Data.DataColumn("responsibleOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresponsibleOther);
                this.columnsubmitPerson = new global::System.Data.DataColumn("submitPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubmitPerson);
                this.columntelphoneSubmitPerson = new global::System.Data.DataColumn("telphoneSubmitPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelphoneSubmitPerson);
                this.columnmobilephoneSubmitPerson = new global::System.Data.DataColumn("mobilephoneSubmitPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobilephoneSubmitPerson);
                this.columnrecipient = new global::System.Data.DataColumn("recipient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipient);
                this.columndateReceived = new global::System.Data.DataColumn("dateReceived", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateReceived);
                this.columncollator = new global::System.Data.DataColumn("collator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncollator);
                this.columncollationRequirement = new global::System.Data.DataColumn("collationRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncollationRequirement);
                this.columnqjdyYear = new global::System.Data.DataColumn("qjdyYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqjdyYear);
                this.columnqjdyNo = new global::System.Data.DataColumn("qjdyNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqjdyNo);
                this.columnlqDate = new global::System.Data.DataColumn("lqDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlqDate);
                this.columnmainCategoryID = new global::System.Data.DataColumn("mainCategoryID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmainCategoryID);
                this.columnsubDictionaryID = new global::System.Data.DataColumn("subDictionaryID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubDictionaryID);
                this.columnminorDictionaryID = new global::System.Data.DataColumn("minorDictionaryID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminorDictionaryID);
                this.columncsyj = new global::System.Data.DataColumn("csyj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncsyj);
                this.columncsyjPerson = new global::System.Data.DataColumn("csyjPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncsyjPerson);
                this.columncsyjDate = new global::System.Data.DataColumn("csyjDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncsyjDate);
                this.columnfzryj = new global::System.Data.DataColumn("fzryj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfzryj);
                this.columnfzryjPerson = new global::System.Data.DataColumn("fzryjPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfzryjPerson);
                this.columnfzryjDate = new global::System.Data.DataColumn("fzryjDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfzryjDate);
                this.columnzgyj = new global::System.Data.DataColumn("zgyj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzgyj);
                this.columnzgyjPerson = new global::System.Data.DataColumn("zgyjPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzgyjPerson);
                this.columnzgyjDate = new global::System.Data.DataColumn("zgyjDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzgyjDate);
                this.columncharacterVolumeCount = new global::System.Data.DataColumn("characterVolumeCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacterVolumeCount);
                this.columncharacter2cm = new global::System.Data.DataColumn("character2cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacter2cm);
                this.columncharacter3cm = new global::System.Data.DataColumn("character3cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacter3cm);
                this.columncharacter4cm = new global::System.Data.DataColumn("character4cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacter4cm);
                this.columncharacter5cm = new global::System.Data.DataColumn("character5cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacter5cm);
                this.columndrawingVolumeCount = new global::System.Data.DataColumn("drawingVolumeCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawingVolumeCount);
                this.columndrawing2cm = new global::System.Data.DataColumn("drawing2cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing2cm);
                this.columndrawing3cm = new global::System.Data.DataColumn("drawing3cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing3cm);
                this.columndrawing4cm = new global::System.Data.DataColumn("drawing4cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing4cm);
                this.columndrawing5cm = new global::System.Data.DataColumn("drawing5cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing5cm);
                this.columndateArchive = new global::System.Data.DataColumn("dateArchive", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateArchive);
                this.columntransferPerson = new global::System.Data.DataColumn("transferPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransferPerson);
                this.columntransferUnit = new global::System.Data.DataColumn("transferUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransferUnit);
                this.columntransferDate = new global::System.Data.DataColumn("transferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransferDate);
                this.columnpassingDate = new global::System.Data.DataColumn("passingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassingDate);
                this.columnarchiveCertificateNo = new global::System.Data.DataColumn("archiveCertificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarchiveCertificateNo);
                this.columnlqyjsDate = new global::System.Data.DataColumn("lqyjsDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlqyjsDate);
                this.columnlqperson = new global::System.Data.DataColumn("lqperson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlqperson);
                this.columntransferContent = new global::System.Data.DataColumn("transferContent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransferContent);
                this.columnprojectProfile = new global::System.Data.DataColumn("projectProfile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojectProfile);
                this.columndateConstructed = new global::System.Data.DataColumn("dateConstructed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateConstructed);
                this.columnarchivesCount = new global::System.Data.DataColumn("archivesCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarchivesCount);
                this.columnInchCountDetail = new global::System.Data.DataColumn("InchCountDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInchCountDetail);
                this.columnoriginalVolumeCount = new global::System.Data.DataColumn("originalVolumeCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginalVolumeCount);
                this.columnoriginalInchCount = new global::System.Data.DataColumn("originalInchCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginalInchCount);
                this.columnoriginalMoneyAmount = new global::System.Data.DataColumn("originalMoneyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoriginalMoneyAmount);
                this.columncopyInchCount = new global::System.Data.DataColumn("copyInchCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncopyInchCount);
                this.columncopyMoneyCount = new global::System.Data.DataColumn("copyMoneyCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncopyMoneyCount);
                this.columntotalMoney = new global::System.Data.DataColumn("totalMoney", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalMoney);
                this.columnstartArchiveNo = new global::System.Data.DataColumn("startArchiveNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartArchiveNo);
                this.columnendArchiveNo = new global::System.Data.DataColumn("endArchiveNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendArchiveNo);
                this.columnstartPaijiaNo = new global::System.Data.DataColumn("startPaijiaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartPaijiaNo);
                this.columnendPaijiaNo = new global::System.Data.DataColumn("endPaijiaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendPaijiaNo);
                this.columnstartRegisNo = new global::System.Data.DataColumn("startRegisNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartRegisNo);
                this.columnendRegisNo = new global::System.Data.DataColumn("endRegisNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendRegisNo);
                this.columnlicenseNo = new global::System.Data.DataColumn("licenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicenseNo);
                this.columnlicenseDate = new global::System.Data.DataColumn("licenseDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicenseDate);
                this.columnjgDate = new global::System.Data.DataColumn("jgDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjgDate);
                this.columnprojectStartDate = new global::System.Data.DataColumn("projectStartDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojectStartDate);
                this.columnprojectFinishDate = new global::System.Data.DataColumn("projectFinishDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojectFinishDate);
                this.columnchangeLog = new global::System.Data.DataColumn("changeLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchangeLog);
                this.columnkeyWords = new global::System.Data.DataColumn("keyWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkeyWords);
                this.columnnotearea = new global::System.Data.DataColumn("notearea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotearea);
                this.columnremarks = new global::System.Data.DataColumn("remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremarks);
                this.columnbuildingArea = new global::System.Data.DataColumn("buildingArea", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuildingArea);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnunderground = new global::System.Data.DataColumn("underground", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunderground);
                this.columnoverground = new global::System.Data.DataColumn("overground", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoverground);
                this.columnstructureTypeID = new global::System.Data.DataColumn("structureTypeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstructureTypeID);
                this.columntextMaterial = new global::System.Data.DataColumn("textMaterial", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntextMaterial);
                this.columndrawing = new global::System.Data.DataColumn("drawing", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing);
                this.columnpaijiaRange = new global::System.Data.DataColumn("paijiaRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaijiaRange);
                this.columnprevClassNo = new global::System.Data.DataColumn("prevClassNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprevClassNo);
                this.columnPhotoCount = new global::System.Data.DataColumn("PhotoCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoCount);
                this.columnbianhaoTime = new global::System.Data.DataColumn("bianhaoTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbianhaoTime);
                this.columnluruTime = new global::System.Data.DataColumn("luruTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnluruTime);
                this.columnshizhengNoStart = new global::System.Data.DataColumn("shizhengNoStart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshizhengNoStart);
                this.columnshizhengNoEnd = new global::System.Data.DataColumn("shizhengNoEnd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshizhengNoEnd);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columncharacter1cm = new global::System.Data.DataColumn("character1cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharacter1cm);
                this.columndrawing1cm = new global::System.Data.DataColumn("drawing1cm", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndrawing1cm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnpaperProjectSeqNo.AllowDBNull = false;
                this.columnfirstResponsible.MaxLength = 100;
                this.columnresponsibleOther.MaxLength = 100;
                this.columnsubmitPerson.MaxLength = 10;
                this.columntelphoneSubmitPerson.MaxLength = 12;
                this.columnmobilephoneSubmitPerson.MaxLength = 20;
                this.columnrecipient.MaxLength = 50;
                this.columncollator.MaxLength = 10;
                this.columncollationRequirement.MaxLength = 50;
                this.columnqjdyYear.MaxLength = 4;
                this.columnqjdyNo.MaxLength = 4;
                this.columnmainCategoryID.MaxLength = 1;
                this.columnsubDictionaryID.MaxLength = 2;
                this.columnminorDictionaryID.MaxLength = 2;
                this.columncsyj.MaxLength = 100;
                this.columncsyjPerson.MaxLength = 50;
                this.columnfzryj.MaxLength = 300;
                this.columnfzryjPerson.MaxLength = 10;
                this.columnzgyj.MaxLength = 100;
                this.columnzgyjPerson.MaxLength = 10;
                this.columntransferPerson.MaxLength = 50;
                this.columntransferUnit.MaxLength = 100;
                this.columnarchiveCertificateNo.MaxLength = 50;
                this.columnlqperson.MaxLength = 20;
                this.columntransferContent.MaxLength = 200;
                this.columnprojectProfile.MaxLength = 200;
                this.columnarchivesCount.MaxLength = 50;
                this.columnInchCountDetail.MaxLength = 500;
                this.columnstartArchiveNo.MaxLength = 20;
                this.columnendArchiveNo.MaxLength = 20;
                this.columnstartPaijiaNo.MaxLength = 8;
                this.columnendPaijiaNo.MaxLength = 8;
                this.columnstartRegisNo.MaxLength = 10;
                this.columnendRegisNo.MaxLength = 10;
                this.columnlicenseNo.MaxLength = 50;
                this.columnlicenseDate.MaxLength = 50;
                this.columnprojectStartDate.MaxLength = 50;
                this.columnprojectFinishDate.MaxLength = 50;
                this.columnchangeLog.MaxLength = 10;
                this.columnkeyWords.MaxLength = 150;
                this.columnnotearea.MaxLength = 200;
                this.columnremarks.MaxLength = 150;
                this.columnunderground.MaxLength = 5;
                this.columnoverground.MaxLength = 5;
                this.columnstructureTypeID.MaxLength = 2;
                this.columnpaijiaRange.MaxLength = 150;
                this.columnprevClassNo.MaxLength = 10;
                this.columnluruTime.MaxLength = 50;
                this.columnshizhengNoStart.MaxLength = 100;
                this.columnshizhengNoEnd.MaxLength = 100;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columncharacter1cm.AllowDBNull = false;
                this.columndrawing1cm.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRow NewPaperArchivesRow() {
                return ((PaperArchivesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaperArchivesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PaperArchivesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaperArchivesRowChanged != null)) {
                    this.PaperArchivesRowChanged(this, new PaperArchivesRowChangeEvent(((PaperArchivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaperArchivesRowChanging != null)) {
                    this.PaperArchivesRowChanging(this, new PaperArchivesRowChangeEvent(((PaperArchivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaperArchivesRowDeleted != null)) {
                    this.PaperArchivesRowDeleted(this, new PaperArchivesRowChangeEvent(((PaperArchivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaperArchivesRowDeleting != null)) {
                    this.PaperArchivesRowDeleting(this, new PaperArchivesRowChangeEvent(((PaperArchivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePaperArchivesRow(PaperArchivesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gerenzhengliDataSet ds = new gerenzhengliDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaperArchivesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vw_archiveCollatorInfoDataTable : global::System.Data.TypedTableBase<vw_archiveCollatorInfoRow> {
            
            private global::System.Data.DataColumn columncollator;
            
            private global::System.Data.DataColumn columntotalArchivesCount;
            
            private global::System.Data.DataColumn columntotalThickness;
            
            private global::System.Data.DataColumn columntotalCharacter;
            
            private global::System.Data.DataColumn columntotalDrawing;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoDataTable() {
                this.TableName = "vw_archiveCollatorInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vw_archiveCollatorInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vw_archiveCollatorInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn collatorColumn {
                get {
                    return this.columncollator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalArchivesCountColumn {
                get {
                    return this.columntotalArchivesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalThicknessColumn {
                get {
                    return this.columntotalThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalCharacterColumn {
                get {
                    return this.columntotalCharacter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalDrawingColumn {
                get {
                    return this.columntotalDrawing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoRow this[int index] {
                get {
                    return ((vw_archiveCollatorInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vw_archiveCollatorInfoRowChangeEventHandler vw_archiveCollatorInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vw_archiveCollatorInfoRowChangeEventHandler vw_archiveCollatorInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vw_archiveCollatorInfoRowChangeEventHandler vw_archiveCollatorInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vw_archiveCollatorInfoRowChangeEventHandler vw_archiveCollatorInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addvw_archiveCollatorInfoRow(vw_archiveCollatorInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoRow Addvw_archiveCollatorInfoRow(string collator, long totalArchivesCount, long totalThickness, long totalCharacter, long totalDrawing) {
                vw_archiveCollatorInfoRow rowvw_archiveCollatorInfoRow = ((vw_archiveCollatorInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        collator,
                        totalArchivesCount,
                        totalThickness,
                        totalCharacter,
                        totalDrawing};
                rowvw_archiveCollatorInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvw_archiveCollatorInfoRow);
                return rowvw_archiveCollatorInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vw_archiveCollatorInfoDataTable cln = ((vw_archiveCollatorInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vw_archiveCollatorInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncollator = base.Columns["collator"];
                this.columntotalArchivesCount = base.Columns["totalArchivesCount"];
                this.columntotalThickness = base.Columns["totalThickness"];
                this.columntotalCharacter = base.Columns["totalCharacter"];
                this.columntotalDrawing = base.Columns["totalDrawing"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncollator = new global::System.Data.DataColumn("collator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncollator);
                this.columntotalArchivesCount = new global::System.Data.DataColumn("totalArchivesCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalArchivesCount);
                this.columntotalThickness = new global::System.Data.DataColumn("totalThickness", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalThickness);
                this.columntotalCharacter = new global::System.Data.DataColumn("totalCharacter", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCharacter);
                this.columntotalDrawing = new global::System.Data.DataColumn("totalDrawing", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalDrawing);
                this.columncollator.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoRow Newvw_archiveCollatorInfoRow() {
                return ((vw_archiveCollatorInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vw_archiveCollatorInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vw_archiveCollatorInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vw_archiveCollatorInfoRowChanged != null)) {
                    this.vw_archiveCollatorInfoRowChanged(this, new vw_archiveCollatorInfoRowChangeEvent(((vw_archiveCollatorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vw_archiveCollatorInfoRowChanging != null)) {
                    this.vw_archiveCollatorInfoRowChanging(this, new vw_archiveCollatorInfoRowChangeEvent(((vw_archiveCollatorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vw_archiveCollatorInfoRowDeleted != null)) {
                    this.vw_archiveCollatorInfoRowDeleted(this, new vw_archiveCollatorInfoRowChangeEvent(((vw_archiveCollatorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vw_archiveCollatorInfoRowDeleting != null)) {
                    this.vw_archiveCollatorInfoRowDeleting(this, new vw_archiveCollatorInfoRowChangeEvent(((vw_archiveCollatorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removevw_archiveCollatorInfoRow(vw_archiveCollatorInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gerenzhengliDataSet ds = new gerenzhengliDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vw_archiveCollatorInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PaperArchivesRow : global::System.Data.DataRow {
            
            private PaperArchivesDataTable tablePaperArchives;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PaperArchivesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaperArchives = ((PaperArchivesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long paperProjectSeqNo {
                get {
                    return ((long)(this[this.tablePaperArchives.paperProjectSeqNoColumn]));
                }
                set {
                    this[this.tablePaperArchives.paperProjectSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long projectNo {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.projectNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“projectNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.projectNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long projectID {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.projectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“projectID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.projectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string firstResponsible {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.firstResponsibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“firstResponsible”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.firstResponsibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string responsibleOther {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.responsibleOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“responsibleOther”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.responsibleOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string submitPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.submitPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“submitPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.submitPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string telphoneSubmitPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.telphoneSubmitPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“telphoneSubmitPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.telphoneSubmitPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mobilephoneSubmitPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.mobilephoneSubmitPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“mobilephoneSubmitPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.mobilephoneSubmitPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string recipient {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.recipientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“recipient”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.recipientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateReceived {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.dateReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“dateReceived”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.dateReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string collator {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.collatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“collator”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.collatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string collationRequirement {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.collationRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“collationRequirement”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.collationRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string qjdyYear {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.qjdyYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“qjdyYear”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.qjdyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string qjdyNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.qjdyNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“qjdyNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.qjdyNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime lqDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.lqDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“lqDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.lqDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mainCategoryID {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.mainCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“mainCategoryID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.mainCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string subDictionaryID {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.subDictionaryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“subDictionaryID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.subDictionaryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string minorDictionaryID {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.minorDictionaryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“minorDictionaryID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.minorDictionaryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string csyj {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.csyjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“csyj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.csyjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string csyjPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.csyjPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“csyjPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.csyjPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime csyjDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.csyjDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“csyjDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.csyjDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fzryj {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.fzryjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“fzryj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.fzryjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fzryjPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.fzryjPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“fzryjPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.fzryjPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime fzryjDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.fzryjDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“fzryjDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.fzryjDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string zgyj {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.zgyjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“zgyj”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.zgyjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string zgyjPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.zgyjPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“zgyjPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.zgyjPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime zgyjDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.zgyjDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“zgyjDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.zgyjDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long characterVolumeCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.characterVolumeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“characterVolumeCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.characterVolumeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long character2cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.character2cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“character2cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.character2cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long character3cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.character3cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“character3cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.character3cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long character4cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.character4cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“character4cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.character4cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long character5cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.character5cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“character5cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.character5cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawingVolumeCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawingVolumeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawingVolumeCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawingVolumeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing2cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawing2cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawing2cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawing2cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing3cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawing3cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawing3cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawing3cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing4cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawing4cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawing4cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawing4cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing5cm {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawing5cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawing5cm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawing5cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateArchive {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.dateArchiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“dateArchive”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.dateArchiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string transferPerson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.transferPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“transferPerson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.transferPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string transferUnit {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.transferUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“transferUnit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.transferUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime transferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.transferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“transferDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.transferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime passingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.passingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“passingDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.passingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string archiveCertificateNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.archiveCertificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“archiveCertificateNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.archiveCertificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime lqyjsDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.lqyjsDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“lqyjsDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.lqyjsDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lqperson {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.lqpersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“lqperson”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.lqpersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string transferContent {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.transferContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“transferContent”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.transferContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string projectProfile {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.projectProfileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“projectProfile”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.projectProfileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateConstructed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.dateConstructedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“dateConstructed”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.dateConstructedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string archivesCount {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.archivesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“archivesCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.archivesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InchCountDetail {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.InchCountDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“InchCountDetail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.InchCountDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long originalVolumeCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.originalVolumeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“originalVolumeCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.originalVolumeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long originalInchCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.originalInchCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“originalInchCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.originalInchCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal originalMoneyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaperArchives.originalMoneyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“originalMoneyAmount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.originalMoneyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long copyInchCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.copyInchCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“copyInchCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.copyInchCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal copyMoneyCount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaperArchives.copyMoneyCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“copyMoneyCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.copyMoneyCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal totalMoney {
                get {
                    try {
                        return ((decimal)(this[this.tablePaperArchives.totalMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“totalMoney”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.totalMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startArchiveNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.startArchiveNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“startArchiveNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.startArchiveNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endArchiveNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.endArchiveNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“endArchiveNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.endArchiveNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startPaijiaNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.startPaijiaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“startPaijiaNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.startPaijiaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endPaijiaNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.endPaijiaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“endPaijiaNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.endPaijiaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string startRegisNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.startRegisNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“startRegisNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.startRegisNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string endRegisNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.endRegisNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“endRegisNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.endRegisNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string licenseNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.licenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“licenseNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.licenseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string licenseDate {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.licenseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“licenseDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.licenseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime jgDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.jgDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“jgDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.jgDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string projectStartDate {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.projectStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“projectStartDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.projectStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string projectFinishDate {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.projectFinishDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“projectFinishDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.projectFinishDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string changeLog {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.changeLogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“changeLog”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.changeLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string keyWords {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.keyWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“keyWords”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.keyWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notearea {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.noteareaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“notearea”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.noteareaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string remarks {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.remarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“remarks”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.remarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double buildingArea {
                get {
                    try {
                        return ((double)(this[this.tablePaperArchives.buildingAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“buildingArea”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.buildingAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double height {
                get {
                    try {
                        return ((double)(this[this.tablePaperArchives.heightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“height”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string underground {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.undergroundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“underground”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.undergroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string overground {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.overgroundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“overground”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.overgroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string structureTypeID {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.structureTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“structureTypeID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.structureTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long textMaterial {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.textMaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“textMaterial”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.textMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.drawingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“drawing”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.drawingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string paijiaRange {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.paijiaRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“paijiaRange”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.paijiaRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prevClassNo {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.prevClassNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“prevClassNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.prevClassNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PhotoCount {
                get {
                    try {
                        return ((long)(this[this.tablePaperArchives.PhotoCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“PhotoCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.PhotoCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime bianhaoTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaperArchives.bianhaoTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“bianhaoTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.bianhaoTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string luruTime {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.luruTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“luruTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.luruTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string shizhengNoStart {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.shizhengNoStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“shizhengNoStart”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.shizhengNoStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string shizhengNoEnd {
                get {
                    try {
                        return ((string)(this[this.tablePaperArchives.shizhengNoEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PaperArchives”中列“shizhengNoEnd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePaperArchives.shizhengNoEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablePaperArchives.IDColumn]));
                }
                set {
                    this[this.tablePaperArchives.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long character1cm {
                get {
                    return ((long)(this[this.tablePaperArchives.character1cmColumn]));
                }
                set {
                    this[this.tablePaperArchives.character1cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long drawing1cm {
                get {
                    return ((long)(this[this.tablePaperArchives.drawing1cmColumn]));
                }
                set {
                    this[this.tablePaperArchives.drawing1cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprojectNoNull() {
                return this.IsNull(this.tablePaperArchives.projectNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprojectNoNull() {
                this[this.tablePaperArchives.projectNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprojectIDNull() {
                return this.IsNull(this.tablePaperArchives.projectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprojectIDNull() {
                this[this.tablePaperArchives.projectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfirstResponsibleNull() {
                return this.IsNull(this.tablePaperArchives.firstResponsibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfirstResponsibleNull() {
                this[this.tablePaperArchives.firstResponsibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsresponsibleOtherNull() {
                return this.IsNull(this.tablePaperArchives.responsibleOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetresponsibleOtherNull() {
                this[this.tablePaperArchives.responsibleOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssubmitPersonNull() {
                return this.IsNull(this.tablePaperArchives.submitPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsubmitPersonNull() {
                this[this.tablePaperArchives.submitPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstelphoneSubmitPersonNull() {
                return this.IsNull(this.tablePaperArchives.telphoneSubmitPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettelphoneSubmitPersonNull() {
                this[this.tablePaperArchives.telphoneSubmitPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmobilephoneSubmitPersonNull() {
                return this.IsNull(this.tablePaperArchives.mobilephoneSubmitPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmobilephoneSubmitPersonNull() {
                this[this.tablePaperArchives.mobilephoneSubmitPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrecipientNull() {
                return this.IsNull(this.tablePaperArchives.recipientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrecipientNull() {
                this[this.tablePaperArchives.recipientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateReceivedNull() {
                return this.IsNull(this.tablePaperArchives.dateReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateReceivedNull() {
                this[this.tablePaperArchives.dateReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscollatorNull() {
                return this.IsNull(this.tablePaperArchives.collatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcollatorNull() {
                this[this.tablePaperArchives.collatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscollationRequirementNull() {
                return this.IsNull(this.tablePaperArchives.collationRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcollationRequirementNull() {
                this[this.tablePaperArchives.collationRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqjdyYearNull() {
                return this.IsNull(this.tablePaperArchives.qjdyYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqjdyYearNull() {
                this[this.tablePaperArchives.qjdyYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqjdyNoNull() {
                return this.IsNull(this.tablePaperArchives.qjdyNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqjdyNoNull() {
                this[this.tablePaperArchives.qjdyNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslqDateNull() {
                return this.IsNull(this.tablePaperArchives.lqDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlqDateNull() {
                this[this.tablePaperArchives.lqDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmainCategoryIDNull() {
                return this.IsNull(this.tablePaperArchives.mainCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmainCategoryIDNull() {
                this[this.tablePaperArchives.mainCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssubDictionaryIDNull() {
                return this.IsNull(this.tablePaperArchives.subDictionaryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsubDictionaryIDNull() {
                this[this.tablePaperArchives.subDictionaryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsminorDictionaryIDNull() {
                return this.IsNull(this.tablePaperArchives.minorDictionaryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetminorDictionaryIDNull() {
                this[this.tablePaperArchives.minorDictionaryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscsyjNull() {
                return this.IsNull(this.tablePaperArchives.csyjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcsyjNull() {
                this[this.tablePaperArchives.csyjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscsyjPersonNull() {
                return this.IsNull(this.tablePaperArchives.csyjPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcsyjPersonNull() {
                this[this.tablePaperArchives.csyjPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscsyjDateNull() {
                return this.IsNull(this.tablePaperArchives.csyjDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcsyjDateNull() {
                this[this.tablePaperArchives.csyjDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfzryjNull() {
                return this.IsNull(this.tablePaperArchives.fzryjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfzryjNull() {
                this[this.tablePaperArchives.fzryjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfzryjPersonNull() {
                return this.IsNull(this.tablePaperArchives.fzryjPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfzryjPersonNull() {
                this[this.tablePaperArchives.fzryjPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfzryjDateNull() {
                return this.IsNull(this.tablePaperArchives.fzryjDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfzryjDateNull() {
                this[this.tablePaperArchives.fzryjDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszgyjNull() {
                return this.IsNull(this.tablePaperArchives.zgyjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzgyjNull() {
                this[this.tablePaperArchives.zgyjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszgyjPersonNull() {
                return this.IsNull(this.tablePaperArchives.zgyjPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzgyjPersonNull() {
                this[this.tablePaperArchives.zgyjPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszgyjDateNull() {
                return this.IsNull(this.tablePaperArchives.zgyjDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzgyjDateNull() {
                this[this.tablePaperArchives.zgyjDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscharacterVolumeCountNull() {
                return this.IsNull(this.tablePaperArchives.characterVolumeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcharacterVolumeCountNull() {
                this[this.tablePaperArchives.characterVolumeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischaracter2cmNull() {
                return this.IsNull(this.tablePaperArchives.character2cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcharacter2cmNull() {
                this[this.tablePaperArchives.character2cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischaracter3cmNull() {
                return this.IsNull(this.tablePaperArchives.character3cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcharacter3cmNull() {
                this[this.tablePaperArchives.character3cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischaracter4cmNull() {
                return this.IsNull(this.tablePaperArchives.character4cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcharacter4cmNull() {
                this[this.tablePaperArchives.character4cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischaracter5cmNull() {
                return this.IsNull(this.tablePaperArchives.character5cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcharacter5cmNull() {
                this[this.tablePaperArchives.character5cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdrawingVolumeCountNull() {
                return this.IsNull(this.tablePaperArchives.drawingVolumeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdrawingVolumeCountNull() {
                this[this.tablePaperArchives.drawingVolumeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdrawing2cmNull() {
                return this.IsNull(this.tablePaperArchives.drawing2cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdrawing2cmNull() {
                this[this.tablePaperArchives.drawing2cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdrawing3cmNull() {
                return this.IsNull(this.tablePaperArchives.drawing3cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdrawing3cmNull() {
                this[this.tablePaperArchives.drawing3cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdrawing4cmNull() {
                return this.IsNull(this.tablePaperArchives.drawing4cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdrawing4cmNull() {
                this[this.tablePaperArchives.drawing4cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdrawing5cmNull() {
                return this.IsNull(this.tablePaperArchives.drawing5cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdrawing5cmNull() {
                this[this.tablePaperArchives.drawing5cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateArchiveNull() {
                return this.IsNull(this.tablePaperArchives.dateArchiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateArchiveNull() {
                this[this.tablePaperArchives.dateArchiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstransferPersonNull() {
                return this.IsNull(this.tablePaperArchives.transferPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettransferPersonNull() {
                this[this.tablePaperArchives.transferPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstransferUnitNull() {
                return this.IsNull(this.tablePaperArchives.transferUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettransferUnitNull() {
                this[this.tablePaperArchives.transferUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstransferDateNull() {
                return this.IsNull(this.tablePaperArchives.transferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettransferDateNull() {
                this[this.tablePaperArchives.transferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspassingDateNull() {
                return this.IsNull(this.tablePaperArchives.passingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpassingDateNull() {
                this[this.tablePaperArchives.passingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarchiveCertificateNoNull() {
                return this.IsNull(this.tablePaperArchives.archiveCertificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarchiveCertificateNoNull() {
                this[this.tablePaperArchives.archiveCertificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslqyjsDateNull() {
                return this.IsNull(this.tablePaperArchives.lqyjsDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlqyjsDateNull() {
                this[this.tablePaperArchives.lqyjsDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslqpersonNull() {
                return this.IsNull(this.tablePaperArchives.lqpersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlqpersonNull() {
                this[this.tablePaperArchives.lqpersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstransferContentNull() {
                return this.IsNull(this.tablePaperArchives.transferContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettransferContentNull() {
                this[this.tablePaperArchives.transferContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprojectProfileNull() {
                return this.IsNull(this.tablePaperArchives.projectProfileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprojectProfileNull() {
                this[this.tablePaperArchives.projectProfileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateConstructedNull() {
                return this.IsNull(this.tablePaperArchives.dateConstructedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateConstructedNull() {
                this[this.tablePaperArchives.dateConstructedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarchivesCountNull() {
                return this.IsNull(this.tablePaperArchives.archivesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarchivesCountNull() {
                this[this.tablePaperArchives.archivesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInchCountDetailNull() {
                return this.IsNull(this.tablePaperArchives.InchCountDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInchCountDetailNull() {
                this[this.tablePaperArchives.InchCountDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoriginalVolumeCountNull() {
                return this.IsNull(this.tablePaperArchives.originalVolumeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoriginalVolumeCountNull() {
                this[this.tablePaperArchives.originalVolumeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoriginalInchCountNull() {
                return this.IsNull(this.tablePaperArchives.originalInchCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoriginalInchCountNull() {
                this[this.tablePaperArchives.originalInchCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoriginalMoneyAmountNull() {
                return this.IsNull(this.tablePaperArchives.originalMoneyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoriginalMoneyAmountNull() {
                this[this.tablePaperArchives.originalMoneyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscopyInchCountNull() {
                return this.IsNull(this.tablePaperArchives.copyInchCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcopyInchCountNull() {
                this[this.tablePaperArchives.copyInchCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscopyMoneyCountNull() {
                return this.IsNull(this.tablePaperArchives.copyMoneyCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcopyMoneyCountNull() {
                this[this.tablePaperArchives.copyMoneyCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalMoneyNull() {
                return this.IsNull(this.tablePaperArchives.totalMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalMoneyNull() {
                this[this.tablePaperArchives.totalMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartArchiveNoNull() {
                return this.IsNull(this.tablePaperArchives.startArchiveNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartArchiveNoNull() {
                this[this.tablePaperArchives.startArchiveNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendArchiveNoNull() {
                return this.IsNull(this.tablePaperArchives.endArchiveNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendArchiveNoNull() {
                this[this.tablePaperArchives.endArchiveNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartPaijiaNoNull() {
                return this.IsNull(this.tablePaperArchives.startPaijiaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartPaijiaNoNull() {
                this[this.tablePaperArchives.startPaijiaNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendPaijiaNoNull() {
                return this.IsNull(this.tablePaperArchives.endPaijiaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendPaijiaNoNull() {
                this[this.tablePaperArchives.endPaijiaNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstartRegisNoNull() {
                return this.IsNull(this.tablePaperArchives.startRegisNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstartRegisNoNull() {
                this[this.tablePaperArchives.startRegisNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsendRegisNoNull() {
                return this.IsNull(this.tablePaperArchives.endRegisNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetendRegisNoNull() {
                this[this.tablePaperArchives.endRegisNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslicenseNoNull() {
                return this.IsNull(this.tablePaperArchives.licenseNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlicenseNoNull() {
                this[this.tablePaperArchives.licenseNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslicenseDateNull() {
                return this.IsNull(this.tablePaperArchives.licenseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlicenseDateNull() {
                this[this.tablePaperArchives.licenseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsjgDateNull() {
                return this.IsNull(this.tablePaperArchives.jgDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetjgDateNull() {
                this[this.tablePaperArchives.jgDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprojectStartDateNull() {
                return this.IsNull(this.tablePaperArchives.projectStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprojectStartDateNull() {
                this[this.tablePaperArchives.projectStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprojectFinishDateNull() {
                return this.IsNull(this.tablePaperArchives.projectFinishDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprojectFinishDateNull() {
                this[this.tablePaperArchives.projectFinishDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IschangeLogNull() {
                return this.IsNull(this.tablePaperArchives.changeLogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetchangeLogNull() {
                this[this.tablePaperArchives.changeLogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskeyWordsNull() {
                return this.IsNull(this.tablePaperArchives.keyWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkeyWordsNull() {
                this[this.tablePaperArchives.keyWordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnoteareaNull() {
                return this.IsNull(this.tablePaperArchives.noteareaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnoteareaNull() {
                this[this.tablePaperArchives.noteareaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsremarksNull() {
                return this.IsNull(this.tablePaperArchives.remarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetremarksNull() {
                this[this.tablePaperArchives.remarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbuildingAreaNull() {
                return this.IsNull(this.tablePaperArchives.buildingAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbuildingAreaNull() {
                this[this.tablePaperArchives.buildingAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsheightNull() {
                return this.IsNull(this.tablePaperArchives.heightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetheightNull() {
                this[this.tablePaperArchives.heightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsundergroundNull() {
                return this.IsNull(this.tablePaperArchives.undergroundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetundergroundNull() {
                this[this.tablePaperArchives.undergroundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsovergroundNull() {
                return this.IsNull(this.tablePaperArchives.overgroundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetovergroundNull() {
                this[this.tablePaperArchives.overgroundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstructureTypeIDNull() {
                return this.IsNull(this.tablePaperArchives.structureTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstructureTypeIDNull() {
                this[this.tablePaperArchives.structureTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstextMaterialNull() {
                return this.IsNull(this.tablePaperArchives.textMaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettextMaterialNull() {
                this[this.tablePaperArchives.textMaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdrawingNull() {
                return this.IsNull(this.tablePaperArchives.drawingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdrawingNull() {
                this[this.tablePaperArchives.drawingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspaijiaRangeNull() {
                return this.IsNull(this.tablePaperArchives.paijiaRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpaijiaRangeNull() {
                this[this.tablePaperArchives.paijiaRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprevClassNoNull() {
                return this.IsNull(this.tablePaperArchives.prevClassNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprevClassNoNull() {
                this[this.tablePaperArchives.prevClassNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoCountNull() {
                return this.IsNull(this.tablePaperArchives.PhotoCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoCountNull() {
                this[this.tablePaperArchives.PhotoCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbianhaoTimeNull() {
                return this.IsNull(this.tablePaperArchives.bianhaoTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbianhaoTimeNull() {
                this[this.tablePaperArchives.bianhaoTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsluruTimeNull() {
                return this.IsNull(this.tablePaperArchives.luruTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetluruTimeNull() {
                this[this.tablePaperArchives.luruTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsshizhengNoStartNull() {
                return this.IsNull(this.tablePaperArchives.shizhengNoStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetshizhengNoStartNull() {
                this[this.tablePaperArchives.shizhengNoStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsshizhengNoEndNull() {
                return this.IsNull(this.tablePaperArchives.shizhengNoEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetshizhengNoEndNull() {
                this[this.tablePaperArchives.shizhengNoEndColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vw_archiveCollatorInfoRow : global::System.Data.DataRow {
            
            private vw_archiveCollatorInfoDataTable tablevw_archiveCollatorInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vw_archiveCollatorInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevw_archiveCollatorInfo = ((vw_archiveCollatorInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string collator {
                get {
                    try {
                        return ((string)(this[this.tablevw_archiveCollatorInfo.collatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“vw_archiveCollatorInfo”中列“collator”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablevw_archiveCollatorInfo.collatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long totalArchivesCount {
                get {
                    try {
                        return ((long)(this[this.tablevw_archiveCollatorInfo.totalArchivesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“vw_archiveCollatorInfo”中列“totalArchivesCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablevw_archiveCollatorInfo.totalArchivesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long totalThickness {
                get {
                    try {
                        return ((long)(this[this.tablevw_archiveCollatorInfo.totalThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“vw_archiveCollatorInfo”中列“totalThickness”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablevw_archiveCollatorInfo.totalThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long totalCharacter {
                get {
                    try {
                        return ((long)(this[this.tablevw_archiveCollatorInfo.totalCharacterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“vw_archiveCollatorInfo”中列“totalCharacter”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablevw_archiveCollatorInfo.totalCharacterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long totalDrawing {
                get {
                    try {
                        return ((long)(this[this.tablevw_archiveCollatorInfo.totalDrawingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“vw_archiveCollatorInfo”中列“totalDrawing”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablevw_archiveCollatorInfo.totalDrawingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscollatorNull() {
                return this.IsNull(this.tablevw_archiveCollatorInfo.collatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcollatorNull() {
                this[this.tablevw_archiveCollatorInfo.collatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalArchivesCountNull() {
                return this.IsNull(this.tablevw_archiveCollatorInfo.totalArchivesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalArchivesCountNull() {
                this[this.tablevw_archiveCollatorInfo.totalArchivesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalThicknessNull() {
                return this.IsNull(this.tablevw_archiveCollatorInfo.totalThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalThicknessNull() {
                this[this.tablevw_archiveCollatorInfo.totalThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalCharacterNull() {
                return this.IsNull(this.tablevw_archiveCollatorInfo.totalCharacterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalCharacterNull() {
                this[this.tablevw_archiveCollatorInfo.totalCharacterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalDrawingNull() {
                return this.IsNull(this.tablevw_archiveCollatorInfo.totalDrawingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalDrawingNull() {
                this[this.tablevw_archiveCollatorInfo.totalDrawingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PaperArchivesRowChangeEvent : global::System.EventArgs {
            
            private PaperArchivesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRowChangeEvent(PaperArchivesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PaperArchivesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vw_archiveCollatorInfoRowChangeEvent : global::System.EventArgs {
            
            private vw_archiveCollatorInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoRowChangeEvent(vw_archiveCollatorInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vw_archiveCollatorInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace urban_archive.gerenzhengliDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PaperArchivesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PaperArchivesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PaperArchives";
            tableMapping.ColumnMappings.Add("paperProjectSeqNo", "paperProjectSeqNo");
            tableMapping.ColumnMappings.Add("projectNo", "projectNo");
            tableMapping.ColumnMappings.Add("projectID", "projectID");
            tableMapping.ColumnMappings.Add("firstResponsible", "firstResponsible");
            tableMapping.ColumnMappings.Add("responsibleOther", "responsibleOther");
            tableMapping.ColumnMappings.Add("submitPerson", "submitPerson");
            tableMapping.ColumnMappings.Add("telphoneSubmitPerson", "telphoneSubmitPerson");
            tableMapping.ColumnMappings.Add("mobilephoneSubmitPerson", "mobilephoneSubmitPerson");
            tableMapping.ColumnMappings.Add("recipient", "recipient");
            tableMapping.ColumnMappings.Add("dateReceived", "dateReceived");
            tableMapping.ColumnMappings.Add("collator", "collator");
            tableMapping.ColumnMappings.Add("collationRequirement", "collationRequirement");
            tableMapping.ColumnMappings.Add("qjdyYear", "qjdyYear");
            tableMapping.ColumnMappings.Add("qjdyNo", "qjdyNo");
            tableMapping.ColumnMappings.Add("lqDate", "lqDate");
            tableMapping.ColumnMappings.Add("mainCategoryID", "mainCategoryID");
            tableMapping.ColumnMappings.Add("subDictionaryID", "subDictionaryID");
            tableMapping.ColumnMappings.Add("minorDictionaryID", "minorDictionaryID");
            tableMapping.ColumnMappings.Add("csyj", "csyj");
            tableMapping.ColumnMappings.Add("csyjPerson", "csyjPerson");
            tableMapping.ColumnMappings.Add("csyjDate", "csyjDate");
            tableMapping.ColumnMappings.Add("fzryj", "fzryj");
            tableMapping.ColumnMappings.Add("fzryjPerson", "fzryjPerson");
            tableMapping.ColumnMappings.Add("fzryjDate", "fzryjDate");
            tableMapping.ColumnMappings.Add("zgyj", "zgyj");
            tableMapping.ColumnMappings.Add("zgyjPerson", "zgyjPerson");
            tableMapping.ColumnMappings.Add("zgyjDate", "zgyjDate");
            tableMapping.ColumnMappings.Add("characterVolumeCount", "characterVolumeCount");
            tableMapping.ColumnMappings.Add("character2cm", "character2cm");
            tableMapping.ColumnMappings.Add("character3cm", "character3cm");
            tableMapping.ColumnMappings.Add("character4cm", "character4cm");
            tableMapping.ColumnMappings.Add("character5cm", "character5cm");
            tableMapping.ColumnMappings.Add("drawingVolumeCount", "drawingVolumeCount");
            tableMapping.ColumnMappings.Add("drawing2cm", "drawing2cm");
            tableMapping.ColumnMappings.Add("drawing3cm", "drawing3cm");
            tableMapping.ColumnMappings.Add("drawing4cm", "drawing4cm");
            tableMapping.ColumnMappings.Add("drawing5cm", "drawing5cm");
            tableMapping.ColumnMappings.Add("dateArchive", "dateArchive");
            tableMapping.ColumnMappings.Add("transferPerson", "transferPerson");
            tableMapping.ColumnMappings.Add("transferUnit", "transferUnit");
            tableMapping.ColumnMappings.Add("transferDate", "transferDate");
            tableMapping.ColumnMappings.Add("passingDate", "passingDate");
            tableMapping.ColumnMappings.Add("archiveCertificateNo", "archiveCertificateNo");
            tableMapping.ColumnMappings.Add("lqyjsDate", "lqyjsDate");
            tableMapping.ColumnMappings.Add("lqperson", "lqperson");
            tableMapping.ColumnMappings.Add("transferContent", "transferContent");
            tableMapping.ColumnMappings.Add("projectProfile", "projectProfile");
            tableMapping.ColumnMappings.Add("dateConstructed", "dateConstructed");
            tableMapping.ColumnMappings.Add("archivesCount", "archivesCount");
            tableMapping.ColumnMappings.Add("InchCountDetail", "InchCountDetail");
            tableMapping.ColumnMappings.Add("originalVolumeCount", "originalVolumeCount");
            tableMapping.ColumnMappings.Add("originalInchCount", "originalInchCount");
            tableMapping.ColumnMappings.Add("originalMoneyAmount", "originalMoneyAmount");
            tableMapping.ColumnMappings.Add("copyInchCount", "copyInchCount");
            tableMapping.ColumnMappings.Add("copyMoneyCount", "copyMoneyCount");
            tableMapping.ColumnMappings.Add("totalMoney", "totalMoney");
            tableMapping.ColumnMappings.Add("startArchiveNo", "startArchiveNo");
            tableMapping.ColumnMappings.Add("endArchiveNo", "endArchiveNo");
            tableMapping.ColumnMappings.Add("startPaijiaNo", "startPaijiaNo");
            tableMapping.ColumnMappings.Add("endPaijiaNo", "endPaijiaNo");
            tableMapping.ColumnMappings.Add("startRegisNo", "startRegisNo");
            tableMapping.ColumnMappings.Add("endRegisNo", "endRegisNo");
            tableMapping.ColumnMappings.Add("licenseNo", "licenseNo");
            tableMapping.ColumnMappings.Add("licenseDate", "licenseDate");
            tableMapping.ColumnMappings.Add("jgDate", "jgDate");
            tableMapping.ColumnMappings.Add("projectStartDate", "projectStartDate");
            tableMapping.ColumnMappings.Add("projectFinishDate", "projectFinishDate");
            tableMapping.ColumnMappings.Add("changeLog", "changeLog");
            tableMapping.ColumnMappings.Add("keyWords", "keyWords");
            tableMapping.ColumnMappings.Add("notearea", "notearea");
            tableMapping.ColumnMappings.Add("remarks", "remarks");
            tableMapping.ColumnMappings.Add("buildingArea", "buildingArea");
            tableMapping.ColumnMappings.Add("height", "height");
            tableMapping.ColumnMappings.Add("underground", "underground");
            tableMapping.ColumnMappings.Add("overground", "overground");
            tableMapping.ColumnMappings.Add("structureTypeID", "structureTypeID");
            tableMapping.ColumnMappings.Add("textMaterial", "textMaterial");
            tableMapping.ColumnMappings.Add("drawing", "drawing");
            tableMapping.ColumnMappings.Add("paijiaRange", "paijiaRange");
            tableMapping.ColumnMappings.Add("prevClassNo", "prevClassNo");
            tableMapping.ColumnMappings.Add("PhotoCount", "PhotoCount");
            tableMapping.ColumnMappings.Add("bianhaoTime", "bianhaoTime");
            tableMapping.ColumnMappings.Add("luruTime", "luruTime");
            tableMapping.ColumnMappings.Add("shizhengNoStart", "shizhengNoStart");
            tableMapping.ColumnMappings.Add("shizhengNoEnd", "shizhengNoEnd");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("character1cm", "character1cm");
            tableMapping.ColumnMappings.Add("drawing1cm", "drawing1cm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PaperArchives] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PaperArchives] ([paperProjectSeqNo], [projectNo], [projectID]," +
                " [firstResponsible], [responsibleOther], [submitPerson], [telphoneSubmitPerson]," +
                " [mobilephoneSubmitPerson], [recipient], [dateReceived], [collator], [collationR" +
                "equirement], [qjdyYear], [qjdyNo], [lqDate], [mainCategoryID], [subDictionaryID]" +
                ", [minorDictionaryID], [csyj], [csyjPerson], [csyjDate], [fzryj], [fzryjPerson]," +
                " [fzryjDate], [zgyj], [zgyjPerson], [zgyjDate], [characterVolumeCount], [charact" +
                "er2cm], [character3cm], [character4cm], [character5cm], [drawingVolumeCount], [d" +
                "rawing2cm], [drawing3cm], [drawing4cm], [drawing5cm], [dateArchive], [transferPe" +
                "rson], [transferUnit], [transferDate], [passingDate], [archiveCertificateNo], [l" +
                "qyjsDate], [lqperson], [transferContent], [projectProfile], [dateConstructed], [" +
                "archivesCount], [InchCountDetail], [originalVolumeCount], [originalInchCount], [" +
                "originalMoneyAmount], [copyInchCount], [copyMoneyCount], [totalMoney], [startArc" +
                "hiveNo], [endArchiveNo], [startPaijiaNo], [endPaijiaNo], [startRegisNo], [endReg" +
                "isNo], [licenseNo], [licenseDate], [jgDate], [projectStartDate], [projectFinishD" +
                "ate], [changeLog], [keyWords], [notearea], [remarks], [buildingArea], [height], " +
                "[underground], [overground], [structureTypeID], [textMaterial], [drawing], [paij" +
                "iaRange], [prevClassNo], [PhotoCount], [bianhaoTime], [luruTime], [shizhengNoSta" +
                "rt], [shizhengNoEnd], [character1cm], [drawing1cm]) VALUES (@paperProjectSeqNo, " +
                "@projectNo, @projectID, @firstResponsible, @responsibleOther, @submitPerson, @te" +
                "lphoneSubmitPerson, @mobilephoneSubmitPerson, @recipient, @dateReceived, @collat" +
                "or, @collationRequirement, @qjdyYear, @qjdyNo, @lqDate, @mainCategoryID, @subDic" +
                "tionaryID, @minorDictionaryID, @csyj, @csyjPerson, @csyjDate, @fzryj, @fzryjPers" +
                "on, @fzryjDate, @zgyj, @zgyjPerson, @zgyjDate, @characterVolumeCount, @character" +
                "2cm, @character3cm, @character4cm, @character5cm, @drawingVolumeCount, @drawing2" +
                "cm, @drawing3cm, @drawing4cm, @drawing5cm, @dateArchive, @transferPerson, @trans" +
                "ferUnit, @transferDate, @passingDate, @archiveCertificateNo, @lqyjsDate, @lqpers" +
                "on, @transferContent, @projectProfile, @dateConstructed, @archivesCount, @InchCo" +
                "untDetail, @originalVolumeCount, @originalInchCount, @originalMoneyAmount, @copy" +
                "InchCount, @copyMoneyCount, @totalMoney, @startArchiveNo, @endArchiveNo, @startP" +
                "aijiaNo, @endPaijiaNo, @startRegisNo, @endRegisNo, @licenseNo, @licenseDate, @jg" +
                "Date, @projectStartDate, @projectFinishDate, @changeLog, @keyWords, @notearea, @" +
                "remarks, @buildingArea, @height, @underground, @overground, @structureTypeID, @t" +
                "extMaterial, @drawing, @paijiaRange, @prevClassNo, @PhotoCount, @bianhaoTime, @l" +
                "uruTime, @shizhengNoStart, @shizhengNoEnd, @character1cm, @drawing1cm)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paperProjectSeqNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paperProjectSeqNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@firstResponsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstResponsible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@responsibleOther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "responsibleOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@submitPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "submitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telphoneSubmitPerson", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneSubmitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mobilephoneSubmitPerson", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mobilephoneSubmitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipient", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateReceived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collationRequirement", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collationRequirement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@qjdyYear", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "qjdyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@qjdyNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "qjdyNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mainCategoryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mainCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subDictionaryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subDictionaryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minorDictionaryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minorDictionaryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@characterVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "characterVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character2cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character2cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character3cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character3cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character4cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character4cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character5cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character5cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawingVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawingVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing2cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing2cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing3cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing3cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing4cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing4cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing5cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing5cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateArchive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateArchive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferUnit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@passingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@archiveCertificateNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "archiveCertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqyjsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqyjsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqperson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqperson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectProfile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectProfile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateConstructed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateConstructed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@archivesCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "archivesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InchCountDetail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InchCountDetail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalInchCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalInchCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalMoneyAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "originalMoneyAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@copyInchCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "copyInchCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@copyMoneyCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "copyMoneyCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalMoney", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "totalMoney", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startArchiveNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startArchiveNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endArchiveNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endArchiveNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startPaijiaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startPaijiaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endPaijiaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endPaijiaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startRegisNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startRegisNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endRegisNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endRegisNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@licenseNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "licenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@licenseDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "licenseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jgDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jgDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectStartDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectFinishDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectFinishDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@changeLog", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "changeLog", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@keyWords", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keyWords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@notearea", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "notearea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@buildingArea", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "buildingArea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@height", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@underground", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "underground", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@overground", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "overground", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@structureTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "structureTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@textMaterial", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "textMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paijiaRange", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paijiaRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prevClassNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prevClassNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhotoCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bianhaoTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bianhaoTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@luruTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "luruTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shizhengNoStart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shizhengNoStart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shizhengNoEnd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shizhengNoEnd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character1cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character1cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing1cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing1cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PaperArchives] SET [paperProjectSeqNo] = @paperProjectSeqNo, [proje" +
                "ctNo] = @projectNo, [projectID] = @projectID, [firstResponsible] = @firstRespons" +
                "ible, [responsibleOther] = @responsibleOther, [submitPerson] = @submitPerson, [t" +
                "elphoneSubmitPerson] = @telphoneSubmitPerson, [mobilephoneSubmitPerson] = @mobil" +
                "ephoneSubmitPerson, [recipient] = @recipient, [dateReceived] = @dateReceived, [c" +
                "ollator] = @collator, [collationRequirement] = @collationRequirement, [qjdyYear]" +
                " = @qjdyYear, [qjdyNo] = @qjdyNo, [lqDate] = @lqDate, [mainCategoryID] = @mainCa" +
                "tegoryID, [subDictionaryID] = @subDictionaryID, [minorDictionaryID] = @minorDict" +
                "ionaryID, [csyj] = @csyj, [csyjPerson] = @csyjPerson, [csyjDate] = @csyjDate, [f" +
                "zryj] = @fzryj, [fzryjPerson] = @fzryjPerson, [fzryjDate] = @fzryjDate, [zgyj] =" +
                " @zgyj, [zgyjPerson] = @zgyjPerson, [zgyjDate] = @zgyjDate, [characterVolumeCoun" +
                "t] = @characterVolumeCount, [character2cm] = @character2cm, [character3cm] = @ch" +
                "aracter3cm, [character4cm] = @character4cm, [character5cm] = @character5cm, [dra" +
                "wingVolumeCount] = @drawingVolumeCount, [drawing2cm] = @drawing2cm, [drawing3cm]" +
                " = @drawing3cm, [drawing4cm] = @drawing4cm, [drawing5cm] = @drawing5cm, [dateArc" +
                "hive] = @dateArchive, [transferPerson] = @transferPerson, [transferUnit] = @tran" +
                "sferUnit, [transferDate] = @transferDate, [passingDate] = @passingDate, [archive" +
                "CertificateNo] = @archiveCertificateNo, [lqyjsDate] = @lqyjsDate, [lqperson] = @" +
                "lqperson, [transferContent] = @transferContent, [projectProfile] = @projectProfi" +
                "le, [dateConstructed] = @dateConstructed, [archivesCount] = @archivesCount, [Inc" +
                "hCountDetail] = @InchCountDetail, [originalVolumeCount] = @originalVolumeCount, " +
                "[originalInchCount] = @originalInchCount, [originalMoneyAmount] = @originalMoney" +
                "Amount, [copyInchCount] = @copyInchCount, [copyMoneyCount] = @copyMoneyCount, [t" +
                "otalMoney] = @totalMoney, [startArchiveNo] = @startArchiveNo, [endArchiveNo] = @" +
                "endArchiveNo, [startPaijiaNo] = @startPaijiaNo, [endPaijiaNo] = @endPaijiaNo, [s" +
                "tartRegisNo] = @startRegisNo, [endRegisNo] = @endRegisNo, [licenseNo] = @license" +
                "No, [licenseDate] = @licenseDate, [jgDate] = @jgDate, [projectStartDate] = @proj" +
                "ectStartDate, [projectFinishDate] = @projectFinishDate, [changeLog] = @changeLog" +
                ", [keyWords] = @keyWords, [notearea] = @notearea, [remarks] = @remarks, [buildin" +
                "gArea] = @buildingArea, [height] = @height, [underground] = @underground, [overg" +
                "round] = @overground, [structureTypeID] = @structureTypeID, [textMaterial] = @te" +
                "xtMaterial, [drawing] = @drawing, [paijiaRange] = @paijiaRange, [prevClassNo] = " +
                "@prevClassNo, [PhotoCount] = @PhotoCount, [bianhaoTime] = @bianhaoTime, [luruTim" +
                "e] = @luruTime, [shizhengNoStart] = @shizhengNoStart, [shizhengNoEnd] = @shizhen" +
                "gNoEnd, [character1cm] = @character1cm, [drawing1cm] = @drawing1cm WHERE (([ID] " +
                "= @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paperProjectSeqNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paperProjectSeqNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectNo", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@firstResponsible", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "firstResponsible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@responsibleOther", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "responsibleOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@submitPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "submitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telphoneSubmitPerson", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telphoneSubmitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mobilephoneSubmitPerson", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mobilephoneSubmitPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipient", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateReceived", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateReceived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@collationRequirement", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "collationRequirement", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@qjdyYear", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "qjdyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@qjdyNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "qjdyNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mainCategoryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mainCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subDictionaryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subDictionaryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minorDictionaryID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minorDictionaryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@csyjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "csyjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fzryjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fzryjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyjPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyjPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zgyjDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zgyjDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@characterVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "characterVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character2cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character2cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character3cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character3cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character4cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character4cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character5cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character5cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawingVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawingVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing2cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing2cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing3cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing3cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing4cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing4cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing5cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing5cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateArchive", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateArchive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferUnit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@passingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "passingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@archiveCertificateNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "archiveCertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqyjsDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqyjsDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lqperson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lqperson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transferContent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transferContent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectProfile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectProfile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateConstructed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateConstructed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@archivesCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "archivesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InchCountDetail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InchCountDetail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalVolumeCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalVolumeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalInchCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "originalInchCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@originalMoneyAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "originalMoneyAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@copyInchCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "copyInchCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@copyMoneyCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "copyMoneyCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalMoney", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "totalMoney", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startArchiveNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startArchiveNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endArchiveNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endArchiveNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startPaijiaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startPaijiaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endPaijiaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endPaijiaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startRegisNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startRegisNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endRegisNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "endRegisNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@licenseNo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "licenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@licenseDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "licenseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@jgDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "jgDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectStartDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@projectFinishDate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "projectFinishDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@changeLog", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "changeLog", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@keyWords", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keyWords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@notearea", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "notearea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@buildingArea", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "buildingArea", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@height", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@underground", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "underground", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@overground", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "overground", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@structureTypeID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "structureTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@textMaterial", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "textMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paijiaRange", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paijiaRange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prevClassNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "prevClassNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhotoCount", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bianhaoTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bianhaoTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@luruTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "luruTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shizhengNoStart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shizhengNoStart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shizhengNoEnd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shizhengNoEnd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@character1cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "character1cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@drawing1cm", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "drawing1cm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["UrbanConConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT paperProjectSeqNo, projectNo, projectID, firstResponsible, responsibleOther, submitPerson, telphoneSubmitPerson, mobilephoneSubmitPerson, recipient, dateReceived, collator, collationRequirement, qjdyYear, qjdyNo, lqDate, mainCategoryID, subDictionaryID, minorDictionaryID, csyj, csyjPerson, csyjDate, fzryj, fzryjPerson, fzryjDate, zgyj, zgyjPerson, zgyjDate, characterVolumeCount, character2cm, character3cm, character4cm, character5cm, drawingVolumeCount, drawing2cm, drawing3cm, drawing4cm, drawing5cm, dateArchive, transferPerson, transferUnit, transferDate, passingDate, archiveCertificateNo, lqyjsDate, lqperson, transferContent, projectProfile, dateConstructed, archivesCount, InchCountDetail, originalVolumeCount, originalInchCount, originalMoneyAmount, copyInchCount, copyMoneyCount, totalMoney, startArchiveNo, endArchiveNo, startPaijiaNo, endPaijiaNo, startRegisNo, endRegisNo, licenseNo, licenseDate, jgDate, projectStartDate, projectFinishDate, changeLog, keyWords, notearea, remarks, buildingArea, height, underground, overground, structureTypeID, textMaterial, drawing, paijiaRange, prevClassNo, PhotoCount, bianhaoTime, luruTime, shizhengNoStart, shizhengNoEnd, ID, character1cm, drawing1cm FROM dbo.PaperArchives";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gerenzhengliDataSet.PaperArchivesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gerenzhengliDataSet.PaperArchivesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gerenzhengliDataSet.PaperArchivesDataTable dataTable = new gerenzhengliDataSet.PaperArchivesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gerenzhengliDataSet.PaperArchivesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gerenzhengliDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PaperArchives");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long paperProjectSeqNo, 
                    global::System.Nullable<long> projectNo, 
                    global::System.Nullable<long> projectID, 
                    string firstResponsible, 
                    string responsibleOther, 
                    string submitPerson, 
                    string telphoneSubmitPerson, 
                    string mobilephoneSubmitPerson, 
                    string recipient, 
                    global::System.Nullable<global::System.DateTime> dateReceived, 
                    string collator, 
                    string collationRequirement, 
                    string qjdyYear, 
                    string qjdyNo, 
                    global::System.Nullable<global::System.DateTime> lqDate, 
                    string mainCategoryID, 
                    string subDictionaryID, 
                    string minorDictionaryID, 
                    string csyj, 
                    string csyjPerson, 
                    global::System.Nullable<global::System.DateTime> csyjDate, 
                    string fzryj, 
                    string fzryjPerson, 
                    global::System.Nullable<global::System.DateTime> fzryjDate, 
                    string zgyj, 
                    string zgyjPerson, 
                    global::System.Nullable<global::System.DateTime> zgyjDate, 
                    global::System.Nullable<long> characterVolumeCount, 
                    global::System.Nullable<long> character2cm, 
                    global::System.Nullable<long> character3cm, 
                    global::System.Nullable<long> character4cm, 
                    global::System.Nullable<long> character5cm, 
                    global::System.Nullable<long> drawingVolumeCount, 
                    global::System.Nullable<long> drawing2cm, 
                    global::System.Nullable<long> drawing3cm, 
                    global::System.Nullable<long> drawing4cm, 
                    global::System.Nullable<long> drawing5cm, 
                    global::System.Nullable<global::System.DateTime> dateArchive, 
                    string transferPerson, 
                    string transferUnit, 
                    global::System.Nullable<global::System.DateTime> transferDate, 
                    global::System.Nullable<global::System.DateTime> passingDate, 
                    string archiveCertificateNo, 
                    global::System.Nullable<global::System.DateTime> lqyjsDate, 
                    string lqperson, 
                    string transferContent, 
                    string projectProfile, 
                    global::System.Nullable<global::System.DateTime> dateConstructed, 
                    string archivesCount, 
                    string InchCountDetail, 
                    global::System.Nullable<long> originalVolumeCount, 
                    global::System.Nullable<long> originalInchCount, 
                    global::System.Nullable<decimal> originalMoneyAmount, 
                    global::System.Nullable<long> copyInchCount, 
                    global::System.Nullable<decimal> copyMoneyCount, 
                    global::System.Nullable<decimal> totalMoney, 
                    string startArchiveNo, 
                    string endArchiveNo, 
                    string startPaijiaNo, 
                    string endPaijiaNo, 
                    string startRegisNo, 
                    string endRegisNo, 
                    string licenseNo, 
                    string licenseDate, 
                    global::System.Nullable<global::System.DateTime> jgDate, 
                    string projectStartDate, 
                    string projectFinishDate, 
                    string changeLog, 
                    string keyWords, 
                    string notearea, 
                    string remarks, 
                    global::System.Nullable<double> buildingArea, 
                    global::System.Nullable<double> height, 
                    string underground, 
                    string overground, 
                    string structureTypeID, 
                    global::System.Nullable<long> textMaterial, 
                    global::System.Nullable<long> drawing, 
                    string paijiaRange, 
                    string prevClassNo, 
                    global::System.Nullable<long> PhotoCount, 
                    global::System.Nullable<global::System.DateTime> bianhaoTime, 
                    string luruTime, 
                    string shizhengNoStart, 
                    string shizhengNoEnd, 
                    long character1cm, 
                    long drawing1cm) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(paperProjectSeqNo));
            if ((projectNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(projectNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((projectID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(projectID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((firstResponsible == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(firstResponsible));
            }
            if ((responsibleOther == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(responsibleOther));
            }
            if ((submitPerson == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(submitPerson));
            }
            if ((telphoneSubmitPerson == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(telphoneSubmitPerson));
            }
            if ((mobilephoneSubmitPerson == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(mobilephoneSubmitPerson));
            }
            if ((recipient == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(recipient));
            }
            if ((dateReceived.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(dateReceived.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((collator == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(collator));
            }
            if ((collationRequirement == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(collationRequirement));
            }
            if ((qjdyYear == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(qjdyYear));
            }
            if ((qjdyNo == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(qjdyNo));
            }
            if ((lqDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(lqDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((mainCategoryID == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(mainCategoryID));
            }
            if ((subDictionaryID == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(subDictionaryID));
            }
            if ((minorDictionaryID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(minorDictionaryID));
            }
            if ((csyj == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(csyj));
            }
            if ((csyjPerson == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(csyjPerson));
            }
            if ((csyjDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(csyjDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((fzryj == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(fzryj));
            }
            if ((fzryjPerson == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(fzryjPerson));
            }
            if ((fzryjDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(fzryjDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((zgyj == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(zgyj));
            }
            if ((zgyjPerson == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(zgyjPerson));
            }
            if ((zgyjDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(zgyjDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((characterVolumeCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((long)(characterVolumeCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((character2cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((long)(character2cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((character3cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((long)(character3cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((character4cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((long)(character4cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((character5cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((long)(character5cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((drawingVolumeCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((long)(drawingVolumeCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((drawing2cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((long)(drawing2cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((drawing3cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((long)(drawing3cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((drawing4cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((long)(drawing4cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((drawing5cm.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((long)(drawing5cm.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((dateArchive.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(dateArchive.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((transferPerson == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(transferPerson));
            }
            if ((transferUnit == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(transferUnit));
            }
            if ((transferDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(transferDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((passingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(passingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((archiveCertificateNo == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(archiveCertificateNo));
            }
            if ((lqyjsDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(lqyjsDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((lqperson == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(lqperson));
            }
            if ((transferContent == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(transferContent));
            }
            if ((projectProfile == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(projectProfile));
            }
            if ((dateConstructed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(dateConstructed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((archivesCount == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(archivesCount));
            }
            if ((InchCountDetail == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(InchCountDetail));
            }
            if ((originalVolumeCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((long)(originalVolumeCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((originalInchCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((long)(originalInchCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((originalMoneyAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(originalMoneyAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((copyInchCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((long)(copyInchCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((copyMoneyCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(copyMoneyCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((totalMoney.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(totalMoney.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((startArchiveNo == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(startArchiveNo));
            }
            if ((endArchiveNo == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(endArchiveNo));
            }
            if ((startPaijiaNo == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(startPaijiaNo));
            }
            if ((endPaijiaNo == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(endPaijiaNo));
            }
            if ((startRegisNo == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(startRegisNo));
            }
            if ((endRegisNo == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(endRegisNo));
            }
            if ((licenseNo == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(licenseNo));
            }
            if ((licenseDate == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(licenseDate));
            }
            if ((jgDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((System.DateTime)(jgDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((projectStartDate == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(projectStartDate));
            }
            if ((projectFinishDate == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(projectFinishDate));
            }
            if ((changeLog == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(changeLog));
            }
            if ((keyWords == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(keyWords));
            }
            if ((notearea == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(notearea));
            }
            if ((remarks == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(remarks));
            }
            if ((buildingArea.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(buildingArea.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((height.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((double)(height.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((underground == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(underground));
            }
            if ((overground == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(overground));
            }
            if ((structureTypeID == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(structureTypeID));
            }
            if ((textMaterial.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((long)(textMaterial.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((drawing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((long)(drawing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((paijiaRange == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(paijiaRange));
            }
            if ((prevClassNo == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(prevClassNo));
            }
            if ((PhotoCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((long)(PhotoCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((bianhaoTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((System.DateTime)(bianhaoTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((luruTime == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(luruTime));
            }
            if ((shizhengNoStart == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(shizhengNoStart));
            }
            if ((shizhengNoEnd == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(shizhengNoEnd));
            }
            this.Adapter.InsertCommand.Parameters[85].Value = ((long)(character1cm));
            this.Adapter.InsertCommand.Parameters[86].Value = ((long)(drawing1cm));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long paperProjectSeqNo, 
                    global::System.Nullable<long> projectNo, 
                    global::System.Nullable<long> projectID, 
                    string firstResponsible, 
                    string responsibleOther, 
                    string submitPerson, 
                    string telphoneSubmitPerson, 
                    string mobilephoneSubmitPerson, 
                    string recipient, 
                    global::System.Nullable<global::System.DateTime> dateReceived, 
                    string collator, 
                    string collationRequirement, 
                    string qjdyYear, 
                    string qjdyNo, 
                    global::System.Nullable<global::System.DateTime> lqDate, 
                    string mainCategoryID, 
                    string subDictionaryID, 
                    string minorDictionaryID, 
                    string csyj, 
                    string csyjPerson, 
                    global::System.Nullable<global::System.DateTime> csyjDate, 
                    string fzryj, 
                    string fzryjPerson, 
                    global::System.Nullable<global::System.DateTime> fzryjDate, 
                    string zgyj, 
                    string zgyjPerson, 
                    global::System.Nullable<global::System.DateTime> zgyjDate, 
                    global::System.Nullable<long> characterVolumeCount, 
                    global::System.Nullable<long> character2cm, 
                    global::System.Nullable<long> character3cm, 
                    global::System.Nullable<long> character4cm, 
                    global::System.Nullable<long> character5cm, 
                    global::System.Nullable<long> drawingVolumeCount, 
                    global::System.Nullable<long> drawing2cm, 
                    global::System.Nullable<long> drawing3cm, 
                    global::System.Nullable<long> drawing4cm, 
                    global::System.Nullable<long> drawing5cm, 
                    global::System.Nullable<global::System.DateTime> dateArchive, 
                    string transferPerson, 
                    string transferUnit, 
                    global::System.Nullable<global::System.DateTime> transferDate, 
                    global::System.Nullable<global::System.DateTime> passingDate, 
                    string archiveCertificateNo, 
                    global::System.Nullable<global::System.DateTime> lqyjsDate, 
                    string lqperson, 
                    string transferContent, 
                    string projectProfile, 
                    global::System.Nullable<global::System.DateTime> dateConstructed, 
                    string archivesCount, 
                    string InchCountDetail, 
                    global::System.Nullable<long> originalVolumeCount, 
                    global::System.Nullable<long> originalInchCount, 
                    global::System.Nullable<decimal> originalMoneyAmount, 
                    global::System.Nullable<long> copyInchCount, 
                    global::System.Nullable<decimal> copyMoneyCount, 
                    global::System.Nullable<decimal> totalMoney, 
                    string startArchiveNo, 
                    string endArchiveNo, 
                    string startPaijiaNo, 
                    string endPaijiaNo, 
                    string startRegisNo, 
                    string endRegisNo, 
                    string licenseNo, 
                    string licenseDate, 
                    global::System.Nullable<global::System.DateTime> jgDate, 
                    string projectStartDate, 
                    string projectFinishDate, 
                    string changeLog, 
                    string keyWords, 
                    string notearea, 
                    string remarks, 
                    global::System.Nullable<double> buildingArea, 
                    global::System.Nullable<double> height, 
                    string underground, 
                    string overground, 
                    string structureTypeID, 
                    global::System.Nullable<long> textMaterial, 
                    global::System.Nullable<long> drawing, 
                    string paijiaRange, 
                    string prevClassNo, 
                    global::System.Nullable<long> PhotoCount, 
                    global::System.Nullable<global::System.DateTime> bianhaoTime, 
                    string luruTime, 
                    string shizhengNoStart, 
                    string shizhengNoEnd, 
                    long character1cm, 
                    long drawing1cm, 
                    int Original_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(paperProjectSeqNo));
            if ((projectNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(projectNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((projectID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(projectID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((firstResponsible == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(firstResponsible));
            }
            if ((responsibleOther == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(responsibleOther));
            }
            if ((submitPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(submitPerson));
            }
            if ((telphoneSubmitPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(telphoneSubmitPerson));
            }
            if ((mobilephoneSubmitPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(mobilephoneSubmitPerson));
            }
            if ((recipient == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(recipient));
            }
            if ((dateReceived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(dateReceived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((collator == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(collator));
            }
            if ((collationRequirement == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(collationRequirement));
            }
            if ((qjdyYear == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(qjdyYear));
            }
            if ((qjdyNo == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(qjdyNo));
            }
            if ((lqDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(lqDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((mainCategoryID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(mainCategoryID));
            }
            if ((subDictionaryID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(subDictionaryID));
            }
            if ((minorDictionaryID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(minorDictionaryID));
            }
            if ((csyj == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(csyj));
            }
            if ((csyjPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(csyjPerson));
            }
            if ((csyjDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(csyjDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((fzryj == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(fzryj));
            }
            if ((fzryjPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(fzryjPerson));
            }
            if ((fzryjDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(fzryjDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((zgyj == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(zgyj));
            }
            if ((zgyjPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(zgyjPerson));
            }
            if ((zgyjDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(zgyjDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((characterVolumeCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(characterVolumeCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((character2cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((long)(character2cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((character3cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((long)(character3cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((character4cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((long)(character4cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((character5cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((long)(character5cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((drawingVolumeCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((long)(drawingVolumeCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((drawing2cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((long)(drawing2cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((drawing3cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((long)(drawing3cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((drawing4cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(drawing4cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((drawing5cm.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((long)(drawing5cm.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((dateArchive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(dateArchive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((transferPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(transferPerson));
            }
            if ((transferUnit == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(transferUnit));
            }
            if ((transferDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(transferDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((passingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(passingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((archiveCertificateNo == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(archiveCertificateNo));
            }
            if ((lqyjsDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(lqyjsDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((lqperson == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(lqperson));
            }
            if ((transferContent == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(transferContent));
            }
            if ((projectProfile == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(projectProfile));
            }
            if ((dateConstructed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(dateConstructed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((archivesCount == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(archivesCount));
            }
            if ((InchCountDetail == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(InchCountDetail));
            }
            if ((originalVolumeCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((long)(originalVolumeCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((originalInchCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((long)(originalInchCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((originalMoneyAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(originalMoneyAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((copyInchCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((long)(copyInchCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((copyMoneyCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(copyMoneyCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((totalMoney.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(totalMoney.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((startArchiveNo == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(startArchiveNo));
            }
            if ((endArchiveNo == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(endArchiveNo));
            }
            if ((startPaijiaNo == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(startPaijiaNo));
            }
            if ((endPaijiaNo == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(endPaijiaNo));
            }
            if ((startRegisNo == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(startRegisNo));
            }
            if ((endRegisNo == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(endRegisNo));
            }
            if ((licenseNo == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(licenseNo));
            }
            if ((licenseDate == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(licenseDate));
            }
            if ((jgDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(jgDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((projectStartDate == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(projectStartDate));
            }
            if ((projectFinishDate == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(projectFinishDate));
            }
            if ((changeLog == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(changeLog));
            }
            if ((keyWords == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(keyWords));
            }
            if ((notearea == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(notearea));
            }
            if ((remarks == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(remarks));
            }
            if ((buildingArea.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(buildingArea.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((height.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(height.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((underground == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(underground));
            }
            if ((overground == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(overground));
            }
            if ((structureTypeID == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(structureTypeID));
            }
            if ((textMaterial.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((long)(textMaterial.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((drawing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((long)(drawing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((paijiaRange == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(paijiaRange));
            }
            if ((prevClassNo == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(prevClassNo));
            }
            if ((PhotoCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((long)(PhotoCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((bianhaoTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(bianhaoTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((luruTime == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(luruTime));
            }
            if ((shizhengNoStart == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(shizhengNoStart));
            }
            if ((shizhengNoEnd == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(shizhengNoEnd));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((long)(character1cm));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((long)(drawing1cm));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vw_archiveCollatorInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vw_archiveCollatorInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vw_archiveCollatorInfo";
            tableMapping.ColumnMappings.Add("collator", "collator");
            tableMapping.ColumnMappings.Add("totalArchivesCount", "totalArchivesCount");
            tableMapping.ColumnMappings.Add("totalThickness", "totalThickness");
            tableMapping.ColumnMappings.Add("totalCharacter", "totalCharacter");
            tableMapping.ColumnMappings.Add("totalDrawing", "totalDrawing");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["UrbanConConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT collator, totalArchivesCount, totalThickness, totalCharacter, totalDrawing" +
                " FROM dbo.vw_archiveCollatorInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gerenzhengliDataSet.vw_archiveCollatorInfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gerenzhengliDataSet.vw_archiveCollatorInfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gerenzhengliDataSet.vw_archiveCollatorInfoDataTable dataTable = new gerenzhengliDataSet.vw_archiveCollatorInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PaperArchivesTableAdapter _paperArchivesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PaperArchivesTableAdapter PaperArchivesTableAdapter {
            get {
                return this._paperArchivesTableAdapter;
            }
            set {
                this._paperArchivesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._paperArchivesTableAdapter != null) 
                            && (this._paperArchivesTableAdapter.Connection != null))) {
                    return this._paperArchivesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._paperArchivesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(gerenzhengliDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._paperArchivesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PaperArchives.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._paperArchivesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(gerenzhengliDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._paperArchivesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PaperArchives.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._paperArchivesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(gerenzhengliDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._paperArchivesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PaperArchives.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._paperArchivesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(gerenzhengliDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._paperArchivesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._paperArchivesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._paperArchivesTableAdapter != null)) {
                    revertConnections.Add(this._paperArchivesTableAdapter, this._paperArchivesTableAdapter.Connection);
                    this._paperArchivesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._paperArchivesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._paperArchivesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._paperArchivesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._paperArchivesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._paperArchivesTableAdapter != null)) {
                    this._paperArchivesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._paperArchivesTableAdapter]));
                    this._paperArchivesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591